{"version":3,"sources":["webpack:///./src/api/question.js","webpack:///./src/api/auth.js","webpack:///./src/views/teacher/QuestionManage.vue","webpack:///src/views/teacher/QuestionManage.vue","webpack:///./src/views/teacher/QuestionManage.vue?b39c","webpack:///./src/views/teacher/QuestionManage.vue?a0e7","webpack:///./src/api/profession.js","webpack:///./src/views/teacher/QuestionManage.vue?c0b1","webpack:///./src/api/questionBank.js","webpack:///./src/api/user.js","webpack:///./src/utils/utils.js"],"names":["getQuestionById","questionId","request","url","method","getQuestionByIds","questionIds","params","getQuestion","queryInfo","deleteQuestion","addQuestion","question","data","importQuestion","updateQuestion","getQuestionByBankIdAndType","login","loginUser","register","registerUser","checkToken","getCode","id","checkUsername","username","render","_vm","this","_c","_self","attrs","staticStyle","model","value","filterText","callback","$$v","expression","ref","professionData","filterNode","defaultProps","on","TreeCurrentChange","typeChange","questionType","$set","_l","item","key","name","bankChange","questionBank","allBank","bankName","contentChange","questionContent","$event","addQuTableVisible","_v","selectionTable","length","operationChange","operation","optionInfo","index","desc","_s","label","_e","directives","rawName","loading","questionInfo","handleTableSectionChange","scopedSlots","_u","fn","scope","row","quType","level","staticClass","updateQu","quContent","image","split","imgUrl","quBankName","Date","createTime","toLocaleDateString","pageNo","pageSize","total","handleSizeChange","handleCurrentChange","updateQuTableVisible","updateQuForm","updateQuFormRules","answer","questionLevel","parseInt","bankId","professionOptions","professionCascadeProps","professionId","uploadImageUrl","uploadPreview","handleUpdateRemove","headers","beforeAvatarUpload","updateUploadImgSuccess","slot","analysis","addUpdateAnswer","checked","checkUpdateAnswer","isTrue","delUpdateAnswer","resetAddQuForm","addQuForm","addQuFormRules","handleRemove","uploadImgSuccess","addAnswer","checkAnswer","delAnswer","addTableVisible","resetAddForm","addForm","addFormRules","addBank","removeTableVisible","resetRemoveForm","removeForm","removeFormRules","removeBank","backShowImgVisible","backShowImgUrl","staticRenderFns","expandTrigger","emitPath","process","VUE_APP_UPLOAD_IMAGE_URL","VUE_APP_IMAGE_URL","children","chaCascadeProps","checkStrictly","optionName","required","message","trigger","images","createPerson","localStorage","getItem","sendEmBt","showEmailVerify","btnText","registerInfo","email","code","rules","created","professionInfo","getQuestionBankInfo","getQuestionInfo","methods","profession","getList","then","resp","getQuestionBank","val","deleteQuestions","map","push","join","$notify","title","type","duration","$refs","resetFields","utils","validFormAndInvoke","banks","addBankQuestion","removeBankQuestion","file","response","fileList","splice","isImg","isLt","size","$message","error","validate","valid","some","addUpload","clearFiles","String","console","log","updateUpload","professionIds","tree","getCheckedKeys","indexOf","computed","authorization","watch","filter","component","param","deleteById","add","form","update","getBankHaveQuestionSumByType","deleteQuestionBank","ids","addQuestionBank","getQuestionByBank","getCurrentUser","updateCurrentUser","updateUser","getUserByIds","userIds","getUserInfo","handlerUser","operateId","addUser","getRandomId","Math","floor","random","formEl","success","fail","Vue","prototype","validFormNotEmpty"],"mappings":"kHAAA,gBAEe,QACbA,gBAAiBC,GACf,OAAOC,eAAQ,CACbC,IAAM,4BAA2BF,EACjCG,OAAQ,SAGZC,iBAAkBC,GAChB,OAAOJ,eAAQ,CACbC,IAAM,4BACNI,OAAQD,EACRF,OAAQ,SAGZI,YAAaC,GACX,OAAOP,eAAQ,CACbC,IAAK,uBACLC,OAAQ,MACRG,OAAQE,KAGZC,eAAgBJ,GACd,OAAOJ,eAAQ,CACbC,IAAK,0BACLC,OAAQ,MACRG,OAAQD,KAGZK,YAAaC,GACX,OAAOV,eAAQ,CACbC,IAAK,uBACLC,OAAQ,OACRS,KAAMD,KAGVE,eAAgBF,GACd,OAAOV,eAAQ,CACbC,IAAK,0BACLC,OAAQ,OACRS,KAAMD,KAGVG,eAAgBH,GACd,OAAOV,eAAQ,CACbC,IAAK,0BACLC,OAAQ,OACRS,KAAMD,KAGVI,2BAA2BT,GACzB,OAAOL,eAAQ,CACbC,IAAK,qCACLC,OAAQ,MACRG,OAAQA,O,kCCvDd,gBAEe,QACbU,MAAOC,GACL,OAAOhB,eAAQ,CACbC,IAAK,gBACLC,OAAQ,OACRS,KAAMK,KAGVC,SAAUC,GACR,OAAOlB,eAAQ,CACbC,IAAK,mBACLC,OAAQ,OACRS,KAAMO,KAGVC,aACE,OAAOnB,eAAQ,CACbC,IAAK,qBACLC,OAAQ,SAGZkB,QAASC,GACP,OAAOrB,eAAQ,CACbC,IAAM,oBAAmBoB,EACzBnB,OAAQ,SAGZoB,cAAeC,GACb,OAAOvB,eAAQ,CACbC,IAAM,iBAAgBsB,EACtBrB,OAAQ,W,2CChCd,IAAIsB,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,eAAe,CAACA,EAAG,WAAW,CAACE,MAAM,CAAC,MAAQ,UAAU,CAACF,EAAG,WAAW,CAACG,YAAY,CAAC,cAAc,QAAQD,MAAM,CAAC,YAAc,aAAaE,MAAM,CAACC,MAAOP,EAAIQ,WAAYC,SAAS,SAAUC,GAAMV,EAAIQ,WAAWE,GAAKC,WAAW,gBAAgBT,EAAG,UAAU,CAACU,IAAI,OAAOP,YAAY,CAAC,aAAa,QAAQD,MAAM,CAAC,KAAOJ,EAAIa,eAAe,gBAAgB,GAAG,sBAAsB,GAAG,wBAAuB,EAAM,WAAW,KAAK,oBAAoB,GAAG,qBAAqBb,EAAIc,WAAW,MAAQd,EAAIe,cAAcC,GAAG,CAAC,MAAQhB,EAAIiB,sBAAsB,GAAGf,EAAG,eAAe,CAACA,EAAG,YAAY,CAACE,MAAM,CAAC,OAAS,QAAQ,CAACF,EAAG,SAAS,CAACA,EAAG,YAAY,CAACE,MAAM,CAAC,UAAY,GAAG,YAAc,WAAWY,GAAG,CAAC,OAAShB,EAAIkB,YAAYZ,MAAM,CAACC,MAAOP,EAAIlB,UAAUqC,aAAcV,SAAS,SAAUC,GAAMV,EAAIoB,KAAKpB,EAAIlB,UAAW,eAAgB4B,IAAMC,WAAW,2BAA2BX,EAAIqB,GAAIrB,EAAImB,cAAc,SAASG,GAAM,OAAOpB,EAAG,YAAY,CAACqB,IAAID,EAAK1B,GAAGQ,MAAM,CAAC,MAAQkB,EAAKE,KAAK,MAAQF,EAAK1B,SAAQ,GAAGM,EAAG,YAAY,CAACG,YAAY,CAAC,cAAc,OAAOD,MAAM,CAAC,UAAY,GAAG,YAAc,SAASY,GAAG,CAAC,OAAShB,EAAIyB,YAAYnB,MAAM,CAACC,MAAOP,EAAIlB,UAAU4C,aAAcjB,SAAS,SAAUC,GAAMV,EAAIoB,KAAKpB,EAAIlB,UAAW,eAAgB4B,IAAMC,WAAW,2BAA2BX,EAAIqB,GAAIrB,EAAI2B,SAAS,SAASL,GAAM,OAAOpB,EAAG,YAAY,CAACqB,IAAID,EAAK1B,GAAGQ,MAAM,CAAC,MAAQkB,EAAKM,SAAS,MAAQN,EAAKM,eAAc,GAAG1B,EAAG,WAAW,CAACG,YAAY,CAAC,cAAc,MAAM,MAAQ,SAASD,MAAM,CAAC,YAAc,OAAO,cAAc,kBAAkBY,GAAG,CAAC,KAAOhB,EAAI6B,eAAevB,MAAM,CAACC,MAAOP,EAAIlB,UAAUgD,gBAAiBrB,SAAS,SAAUC,GAAMV,EAAIoB,KAAKpB,EAAIlB,UAAW,kBAAmB4B,IAAMC,WAAW,+BAA+BT,EAAG,YAAY,CAACG,YAAY,CAAC,MAAQ,QAAQ,eAAe,QAAQD,MAAM,CAAC,KAAO,UAAU,KAAO,eAAe,KAAO,UAAUY,GAAG,CAAC,MAAQ,SAASe,GAAQ/B,EAAIgC,mBAAoB,KAAQ,CAAChC,EAAIiC,GAAG,UAAU,IAAI,GAAG/B,EAAG,UAAU,CAAgC,IAA9BF,EAAIkC,eAAeC,OAAcjC,EAAG,YAAY,CAACG,YAAY,CAAC,gBAAgB,QAAQD,MAAM,CAAC,UAAY,GAAG,YAAc,MAAQJ,EAAIkC,eAAeC,OAAS,KAAKnB,GAAG,CAAC,OAAShB,EAAIoC,iBAAiB9B,MAAM,CAACC,MAAOP,EAAIqC,UAAW5B,SAAS,SAAUC,GAAMV,EAAIqC,UAAU3B,GAAKC,WAAW,cAAcX,EAAIqB,GAAIrB,EAAIsC,YAAY,SAAShB,EAAKiB,GAAO,OAAOrC,EAAG,YAAY,CAACqB,IAAIgB,EAAMnC,MAAM,CAAC,MAAQkB,EAAKkB,OAAO,CAACtC,EAAG,OAAO,CAACG,YAAY,CAAC,MAAQ,SAAS,CAACL,EAAIiC,GAAGjC,EAAIyC,GAAGnB,EAAKoB,UAAUxC,EAAG,OAAO,CAACG,YAAY,CAAC,MAAQ,QAAQ,MAAQ,UAAU,YAAY,SAAS,CAACL,EAAIiC,GAAGjC,EAAIyC,GAAGnB,EAAKkB,cAAa,GAAGxC,EAAI2C,KAAKzC,EAAG,WAAW,CAAC0C,WAAW,CAAC,CAACpB,KAAK,UAAUqB,QAAQ,YAAYtC,MAAOP,EAAI8C,QAASnC,WAAW,YAAYC,IAAI,gBAAgBP,YAAY,CAAC,MAAQ,QAAQD,MAAM,CAAC,wBAAwB,GAAG,QAAS,EAAK,KAAOJ,EAAI+C,aAAa,iBAAiB,QAAQ/B,GAAG,CAAC,mBAAmBhB,EAAIgD,2BAA2B,CAAC9C,EAAG,kBAAkB,CAACE,MAAM,CAAC,MAAQ,SAAS,KAAO,YAAY,MAAQ,QAAQF,EAAG,kBAAkB,CAACE,MAAM,CAAC,MAAQ,QAAQ6C,YAAYjD,EAAIkD,GAAG,CAAC,CAAC3B,IAAI,UAAU4B,GAAG,SAASC,GAAO,MAAO,CAAClD,EAAG,MAAM,CAACA,EAAG,MAAM,CAACF,EAAIiC,GAAG,MAA4B,IAArBmB,EAAMC,IAAIC,OAAcpD,EAAG,OAAO,CAACF,EAAIiC,GAAG,SAA+B,IAArBmB,EAAMC,IAAIC,OAAcpD,EAAG,OAAO,CAACF,EAAIiC,GAAG,SAA+B,IAArBmB,EAAMC,IAAIC,OAAcpD,EAAG,OAAO,CAACF,EAAIiC,GAAG,SAA+B,IAArBmB,EAAMC,IAAIC,OAAcpD,EAAG,OAAO,CAACF,EAAIiC,GAAG,SAA+B,IAArBmB,EAAMC,IAAIC,OAAcpD,EAAG,OAAO,CAACF,EAAIiC,GAAG,SAASjC,EAAI2C,KAAK3C,EAAIiC,GAAG,OAA4B,IAApBmB,EAAMC,IAAIE,MAAarD,EAAG,OAAO,CAACF,EAAIiC,GAAG,QAAQjC,EAAI2C,KAA0B,IAApBS,EAAMC,IAAIE,MAAarD,EAAG,OAAO,CAACF,EAAIiC,GAAG,QAAQjC,EAAI2C,KAA0B,IAApBS,EAAMC,IAAIE,MAAarD,EAAG,OAAO,CAACF,EAAIiC,GAAG,QAAQjC,EAAI2C,KAAK3C,EAAIiC,GAAG,MAAM/B,EAAG,OAAO,CAACsD,YAAY,YAAYxC,GAAG,CAAC,MAAQ,SAASe,GAAQ,OAAO/B,EAAIyD,SAASL,EAAMC,IAAIzD,OAAO,CAACI,EAAIiC,GAAGjC,EAAIyC,GAAGW,EAAMC,IAAIK,gBAAkC,MAAjBN,EAAMC,IAAIM,OAAiC,KAAlBP,EAAMC,IAAIM,MAAYzD,EAAG,MAAM,CAACG,YAAY,CAAC,aAAa,QAAQL,EAAIqB,GAAI+B,EAAMC,IAAIM,MAAMC,MAAM,MAAM,SAASpF,GAAK,OAAO0B,EAAG,MAAM,CAACG,YAAY,CAAC,YAAY,QAAQ,aAAa,QAAQ,eAAe,QAAQD,MAAM,CAAC,IAAMJ,EAAI6D,OAAOrF,QAAS,GAAGwB,EAAI2C,KAAKzC,EAAG,MAAM,CAACsD,YAAY,oBAAoB,CAACtD,EAAG,MAAM,CAACF,EAAIiC,GAAG,QAAQjC,EAAIyC,GAAGW,EAAMC,IAAIS,eAAe5D,EAAG,MAAM,CAACG,YAAY,CAAC,gBAAgB,SAAS,CAACL,EAAIiC,GAAGjC,EAAIyC,GAAG,IAAIsB,KAAKX,EAAMC,IAAIW,YAAYC,qCAAqC,GAAG/D,EAAG,gBAAgB,CAACG,YAAY,CAAC,aAAa,QAAQD,MAAM,CAAC,eAAeJ,EAAIlB,UAAUoF,OAAO,aAAa,CAAC,GAAI,GAAI,GAAI,IAAI,YAAYlE,EAAIlB,UAAUqF,SAAS,OAAS,0CAA0C,MAAQnE,EAAIoE,OAAOpD,GAAG,CAAC,cAAchB,EAAIqE,iBAAiB,iBAAiBrE,EAAIsE,wBAAwB,IAAI,GAAGpE,EAAG,YAAY,CAACE,MAAM,CAAC,MAAQ,OAAO,QAAUJ,EAAIuE,qBAAqB,MAAQ,MAAM,OAAS,IAAIvD,GAAG,CAAC,iBAAiB,SAASe,GAAQ/B,EAAIuE,qBAAqBxC,KAAU,CAAC7B,EAAG,UAAU,CAACA,EAAG,UAAU,CAACU,IAAI,eAAeR,MAAM,CAAC,MAAQJ,EAAIwE,aAAa,MAAQxE,EAAIyE,oBAAoB,CAACvE,EAAG,eAAe,CAACE,MAAM,CAAC,MAAQ,OAAO,cAAc,QAAQ,KAAO,iBAAiB,CAACF,EAAG,YAAY,CAACE,MAAM,CAAC,SAAW,GAAG,YAAc,OAAOY,GAAG,CAAC,OAAS,SAASe,GAAQ/B,EAAIwE,aAAaE,OAAU,KAAKpE,MAAM,CAACC,MAAOP,EAAIwE,aAAarD,aAAcV,SAAS,SAAUC,GAAMV,EAAIoB,KAAKpB,EAAIwE,aAAc,eAAgB9D,IAAMC,WAAW,8BAA8BX,EAAIqB,GAAIrB,EAAImB,cAAc,SAASG,GAAM,OAAOpB,EAAG,YAAY,CAACqB,IAAID,EAAK1B,GAAGQ,MAAM,CAAC,MAAQkB,EAAKE,KAAK,MAAQF,EAAK1B,SAAQ,IAAI,GAAGM,EAAG,eAAe,CAACE,MAAM,CAAC,MAAQ,OAAO,cAAc,QAAQ,KAAO,kBAAkB,CAACF,EAAG,YAAY,CAACE,MAAM,CAAC,YAAc,OAAOE,MAAM,CAACC,MAAOP,EAAIwE,aAAaG,cAAelE,SAAS,SAAUC,GAAMV,EAAIoB,KAAKpB,EAAIwE,aAAc,gBAAiB9D,IAAMC,WAAW,+BAA+B,CAACT,EAAG,YAAY,CAACE,MAAM,CAAC,MAAQwE,SAAS,GAAG,MAAQ,QAAQ1E,EAAG,YAAY,CAACE,MAAM,CAAC,MAAQwE,SAAS,GAAG,MAAQ,QAAQ1E,EAAG,YAAY,CAACE,MAAM,CAAC,MAAQwE,SAAS,GAAG,MAAQ,SAAS,IAAI,GAAG1E,EAAG,eAAe,CAACE,MAAM,CAAC,MAAQ,OAAO,cAAc,QAAQ,KAAO,WAAW,CAACF,EAAG,YAAY,CAACE,MAAM,CAAC,SAAW,GAAG,YAAc,OAAOE,MAAM,CAACC,MAAOP,EAAIwE,aAAaK,OAAQpE,SAAS,SAAUC,GAAMV,EAAIoB,KAAKpB,EAAIwE,aAAc,SAAU9D,IAAMC,WAAW,wBAAwBX,EAAIqB,GAAIrB,EAAI2B,SAAS,SAASL,GAAM,OAAOpB,EAAG,YAAY,CAACqB,IAAID,EAAKuD,OAAOzE,MAAM,CAAC,MAAQkB,EAAKM,SAAS,MAAQN,EAAKuD,aAAY,IAAI,GAAG3E,EAAG,eAAe,CAACE,MAAM,CAAC,MAAQ,OAAO,cAAc,QAAQ,KAAO,iBAAiB,CAACF,EAAG,cAAc,CAACG,YAAY,CAAC,MAAQ,SAASD,MAAM,CAAC,QAAUJ,EAAI8E,kBAAkB,MAAQ9E,EAAI+E,wBAAwBzE,MAAM,CAACC,MAAOP,EAAIwE,aAAaQ,aAAcvE,SAAS,SAAUC,GAAMV,EAAIoB,KAAKpB,EAAIwE,aAAc,eAAgB9D,IAAMC,WAAW,gCAAgC,GAAGT,EAAG,eAAe,CAACE,MAAM,CAAC,MAAQ,OAAO,cAAc,QAAQ,KAAO,oBAAoB,CAACF,EAAG,WAAW,CAACG,YAAY,CAAC,cAAc,OAAOD,MAAM,CAAC,KAAO,WAAW,KAAO,GAAGE,MAAM,CAACC,MAAOP,EAAIwE,aAAa1C,gBAAiBrB,SAAS,SAAUC,GAAMV,EAAIoB,KAAKpB,EAAIwE,aAAc,kBAAmB9D,IAAMC,WAAW,mCAAmC,GAAGT,EAAG,eAAe,CAACE,MAAM,CAAC,MAAQ,OAAO,cAAc,UAAU,CAACF,EAAG,YAAY,CAACU,IAAI,eAAeR,MAAM,CAAC,OAASJ,EAAIiF,eAAiB,+BAA+B,aAAajF,EAAIkF,cAAc,YAAYlF,EAAImF,mBAAmB,QAAUnF,EAAIoF,QAAQ,gBAAgBpF,EAAIqF,mBAAmB,YAAY,UAAU,aAAarF,EAAIsF,uBAAuB,KAAO,SAAS,CAACpF,EAAG,YAAY,CAACE,MAAM,CAAC,KAAO,QAAQ,KAAO,YAAY,CAACJ,EAAIiC,GAAG,UAAU/B,EAAG,MAAM,CAACsD,YAAY,iBAAiBpD,MAAM,CAAC,KAAO,OAAOmF,KAAK,OAAO,CAACvF,EAAIiC,GAAG,4BAA4B,IAAI,GAAG/B,EAAG,eAAe,CAACE,MAAM,CAAC,MAAQ,OAAO,cAAc,QAAQ,KAAO,aAAa,CAACF,EAAG,WAAW,CAACG,YAAY,CAAC,cAAc,OAAOD,MAAM,CAAC,KAAO,WAAW,KAAO,GAAGE,MAAM,CAACC,MAAOP,EAAIwE,aAAagB,SAAU/E,SAAS,SAAUC,GAAMV,EAAIoB,KAAKpB,EAAIwE,aAAc,WAAY9D,IAAMC,WAAW,4BAA4B,GAAoC,IAAhCX,EAAIwE,aAAarD,aAAkBjB,EAAG,YAAY,CAACG,YAAY,CAAC,cAAc,QAAQD,MAAM,CAAC,KAAO,UAAU,MAAQ,GAAG,KAAO,QAAQ,KAAO,gBAAgBY,GAAG,CAAC,MAAQ,SAASe,GAAQ,OAAO/B,EAAIyF,gBAAgBzF,EAAIwE,aAAarD,iBAAiB,CAACnB,EAAIiC,GAAG,UAAUjC,EAAI2C,KAAwC,IAAlC3C,EAAIwE,aAAarD,aAAoBjB,EAAG,eAAe,CAACE,MAAM,CAAC,KAAO,WAAW,CAACF,EAAG,WAAW,CAACG,YAAY,CAAC,MAAQ,MAAM,cAAc,OAAO,aAAa,QAAQD,MAAM,CAAC,KAAOJ,EAAIwE,aAAaE,OAAO,OAAS,KAAK,CAAoC,IAAlC1E,EAAIwE,aAAarD,aAAoBjB,EAAG,kBAAkB,CAACE,MAAM,CAAC,MAAQ,OAAO,MAAQ,KAAK,MAAQ,UAAU6C,YAAYjD,EAAIkD,GAAG,CAAC,CAAC3B,IAAI,UAAU4B,GAAG,SAASC,GAAO,MAAO,CAAClD,EAAG,cAAc,CAACc,GAAG,CAAC,OAAS0E,GAAS1F,EAAI2F,kBAAkBD,EAAQtC,EAAMC,IAAIzD,KAAKU,MAAM,CAACC,MAAO6C,EAAMC,IAAIuC,OAAQnF,SAAS,SAAUC,GAAMV,EAAIoB,KAAKgC,EAAMC,IAAK,SAAU3C,IAAMC,WAAW,qBAAqB,CAACX,EAAIiC,GAAG,aAAa,MAAK,EAAM,cAAcjC,EAAI2C,KAAKzC,EAAG,kBAAkB,CAACE,MAAM,CAAC,MAAQ,QAAQ6C,YAAYjD,EAAIkD,GAAG,CAAC,CAAC3B,IAAI,UAAU4B,GAAG,SAASC,GAAO,MAAO,CAAClD,EAAG,WAAW,CAACG,YAAY,CAAC,cAAc,OAAOD,MAAM,CAAC,KAAO,WAAW,KAAO,GAAGE,MAAM,CAACC,MAAO6C,EAAMC,IAAIqB,OAAQjE,SAAS,SAAUC,GAAMV,EAAIoB,KAAKgC,EAAMC,IAAK,SAAU3C,IAAMC,WAAW,0BAA0B,MAAK,EAAM,cAAcT,EAAG,kBAAkB,CAACE,MAAM,CAAC,MAAQ,QAAQ6C,YAAYjD,EAAIkD,GAAG,CAAC,CAAC3B,IAAI,UAAU4B,GAAG,SAASC,GAAO,MAAO,CAAClD,EAAG,WAAW,CAACG,YAAY,CAAC,cAAc,OAAOD,MAAM,CAAC,KAAO,WAAW,KAAO,GAAGE,MAAM,CAACC,MAAO6C,EAAMC,IAAImC,SAAU/E,SAAS,SAAUC,GAAMV,EAAIoB,KAAKgC,EAAMC,IAAK,WAAY3C,IAAMC,WAAW,4BAA4B,MAAK,EAAM,cAAcT,EAAG,kBAAkB,CAACE,MAAM,CAAC,MAAQ,KAAK,MAAQ,KAAK,MAAQ,UAAU6C,YAAYjD,EAAIkD,GAAG,CAAC,CAAC3B,IAAI,UAAU4B,GAAG,SAASC,GAAO,MAAO,CAAClD,EAAG,YAAY,CAACE,MAAM,CAAC,KAAO,SAAS,KAAO,iBAAiB,OAAS,IAAIY,GAAG,CAAC,MAAQ,SAASe,GAAQ,OAAO/B,EAAI6F,gBAAgBzC,EAAMC,IAAIzD,YAAY,MAAK,EAAM,eAAe,IAAI,GAAGI,EAAI2C,MAAM,IAAI,GAAGzC,EAAG,MAAM,CAACsD,YAAY,gBAAgBpD,MAAM,CAAC,KAAO,UAAUmF,KAAK,UAAU,CAACrF,EAAG,YAAY,CAACc,GAAG,CAAC,MAAQ,SAASe,GAAQ/B,EAAIuE,sBAAuB,KAAS,CAACvE,EAAIiC,GAAG,SAAS/B,EAAG,YAAY,CAACE,MAAM,CAAC,KAAO,WAAWY,GAAG,CAAC,MAAQhB,EAAIZ,iBAAiB,CAACY,EAAIiC,GAAG,UAAU,IAAI,GAAG/B,EAAG,YAAY,CAACE,MAAM,CAAC,MAAQ,OAAO,QAAUJ,EAAIgC,kBAAkB,MAAQ,MAAM,OAAS,IAAIhB,GAAG,CAAC,iBAAiB,SAASe,GAAQ/B,EAAIgC,kBAAkBD,GAAQ,MAAQ/B,EAAI8F,iBAAiB,CAAC5F,EAAG,UAAU,CAACA,EAAG,UAAU,CAACU,IAAI,YAAYR,MAAM,CAAC,MAAQJ,EAAI+F,UAAU,MAAQ/F,EAAIgG,iBAAiB,CAAC9F,EAAG,eAAe,CAACE,MAAM,CAAC,MAAQ,OAAO,cAAc,QAAQ,KAAO,iBAAiB,CAACF,EAAG,YAAY,CAACE,MAAM,CAAC,YAAc,OAAOY,GAAG,CAAC,OAAS,SAASe,GAAQ/B,EAAI+F,UAAUrB,OAAU,KAAKpE,MAAM,CAACC,MAAOP,EAAI+F,UAAU5E,aAAcV,SAAS,SAAUC,GAAMV,EAAIoB,KAAKpB,EAAI+F,UAAW,eAAgBrF,IAAMC,WAAW,2BAA2BX,EAAIqB,GAAIrB,EAAImB,cAAc,SAASG,GAAM,OAAOpB,EAAG,YAAY,CAACqB,IAAID,EAAK1B,GAAGQ,MAAM,CAAC,MAAQkB,EAAKE,KAAK,MAAQF,EAAK1B,SAAQ,IAAI,GAAGM,EAAG,eAAe,CAACE,MAAM,CAAC,MAAQ,OAAO,cAAc,QAAQ,KAAO,kBAAkB,CAACF,EAAG,YAAY,CAACE,MAAM,CAAC,YAAc,OAAOE,MAAM,CAACC,MAAOP,EAAI+F,UAAUpB,cAAelE,SAAS,SAAUC,GAAMV,EAAIoB,KAAKpB,EAAI+F,UAAW,gBAAiBrF,IAAMC,WAAW,4BAA4B,CAACT,EAAG,YAAY,CAACE,MAAM,CAAC,MAAQwE,SAAS,GAAG,MAAQ,QAAQ1E,EAAG,YAAY,CAACE,MAAM,CAAC,MAAQwE,SAAS,GAAG,MAAQ,QAAQ1E,EAAG,YAAY,CAACE,MAAM,CAAC,MAAQwE,SAAS,GAAG,MAAQ,SAAS,IAAI,GAAG1E,EAAG,eAAe,CAACE,MAAM,CAAC,MAAQ,OAAO,cAAc,QAAQ,KAAO,WAAW,CAACF,EAAG,YAAY,CAACE,MAAM,CAAC,SAAW,GAAG,YAAc,OAAOE,MAAM,CAACC,MAAOP,EAAI+F,UAAUlB,OAAQpE,SAAS,SAAUC,GAAMV,EAAIoB,KAAKpB,EAAI+F,UAAW,SAAUrF,IAAMC,WAAW,qBAAqBX,EAAIqB,GAAIrB,EAAI2B,SAAS,SAASL,GAAM,OAAOpB,EAAG,YAAY,CAACqB,IAAID,EAAKuD,OAAOzE,MAAM,CAAC,MAAQkB,EAAKM,SAAS,MAAQN,EAAKuD,aAAY,IAAI,GAAG3E,EAAG,eAAe,CAACE,MAAM,CAAC,MAAQ,OAAO,cAAc,QAAQ,KAAO,iBAAiB,CAACF,EAAG,cAAc,CAACG,YAAY,CAAC,MAAQ,SAASD,MAAM,CAAC,QAAUJ,EAAI8E,kBAAkB,MAAQ9E,EAAI+E,wBAAwBzE,MAAM,CAACC,MAAOP,EAAI+F,UAAUf,aAAcvE,SAAS,SAAUC,GAAMV,EAAIoB,KAAKpB,EAAI+F,UAAW,eAAgBrF,IAAMC,WAAW,6BAA6B,GAAGT,EAAG,eAAe,CAACE,MAAM,CAAC,MAAQ,OAAO,cAAc,QAAQ,KAAO,oBAAoB,CAACF,EAAG,WAAW,CAACG,YAAY,CAAC,cAAc,OAAOD,MAAM,CAAC,KAAO,WAAW,KAAO,GAAGE,MAAM,CAACC,MAAOP,EAAI+F,UAAUjE,gBAAiBrB,SAAS,SAAUC,GAAMV,EAAIoB,KAAKpB,EAAI+F,UAAW,kBAAmBrF,IAAMC,WAAW,gCAAgC,GAAGT,EAAG,eAAe,CAACE,MAAM,CAAC,MAAQ,OAAO,cAAc,QAAQ,KAAO,UAAU,CAACF,EAAG,YAAY,CAACU,IAAI,YAAYR,MAAM,CAAC,OAASJ,EAAIiF,eAAiB,+BAA+B,aAAajF,EAAIkF,cAAc,YAAYlF,EAAIiG,aAAa,QAAUjG,EAAIoF,QAAQ,gBAAgBpF,EAAIqF,mBAAmB,YAAY,UAAU,aAAarF,EAAIkG,iBAAiB,KAAO,SAAS,CAAChG,EAAG,YAAY,CAACE,MAAM,CAAC,KAAO,QAAQ,KAAO,YAAY,CAACJ,EAAIiC,GAAG,UAAU/B,EAAG,MAAM,CAACsD,YAAY,iBAAiBpD,MAAM,CAAC,KAAO,OAAOmF,KAAK,OAAO,CAACvF,EAAIiC,GAAG,4BAA4B,IAAI,GAAG/B,EAAG,eAAe,CAACE,MAAM,CAAC,MAAQ,OAAO,cAAc,QAAQ,KAAO,aAAa,CAACF,EAAG,WAAW,CAACG,YAAY,CAAC,cAAc,OAAOD,MAAM,CAAC,KAAO,WAAW,KAAO,GAAGE,MAAM,CAACC,MAAOP,EAAI+F,UAAUP,SAAU/E,SAAS,SAAUC,GAAMV,EAAIoB,KAAKpB,EAAI+F,UAAW,WAAYrF,IAAMC,WAAW,yBAAyB,GAAiC,IAA7BX,EAAI+F,UAAU5E,aAAkBjB,EAAG,YAAY,CAACG,YAAY,CAAC,cAAc,QAAQD,MAAM,CAAC,KAAO,UAAU,MAAQ,GAAG,KAAO,QAAQ,KAAO,gBAAgBY,GAAG,CAAC,MAAQ,SAASe,GAAQ,OAAO/B,EAAImG,UAAUnG,EAAI+F,UAAU5E,iBAAiB,CAACnB,EAAIiC,GAAG,UAAUjC,EAAI2C,KAAmC,IAA7B3C,EAAI+F,UAAU5E,aAAkBjB,EAAG,eAAe,CAACE,MAAM,CAAC,KAAO,WAAW,CAACF,EAAG,WAAW,CAACG,YAAY,CAAC,MAAQ,MAAM,cAAc,OAAO,aAAa,QAAQD,MAAM,CAAC,KAAOJ,EAAI+F,UAAUrB,OAAO,OAAS,KAAK,CAA+B,IAA7B1E,EAAI+F,UAAU5E,aAAkBjB,EAAG,kBAAkB,CAACE,MAAM,CAAC,MAAQ,OAAO,MAAQ,KAAK,MAAQ,UAAU6C,YAAYjD,EAAIkD,GAAG,CAAC,CAAC3B,IAAI,UAAU4B,GAAG,SAASC,GAAO,MAAO,CAAClD,EAAG,cAAc,CAACc,GAAG,CAAC,OAAS0E,GAAS1F,EAAIoG,YAAYV,EAAQtC,EAAMC,IAAIzD,KAAKU,MAAM,CAACC,MAAO6C,EAAMC,IAAIuC,OAAQnF,SAAS,SAAUC,GAAMV,EAAIoB,KAAKgC,EAAMC,IAAK,SAAU3C,IAAMC,WAAW,qBAAqB,CAACX,EAAIiC,GAAG,aAAa,MAAK,EAAM,cAAcjC,EAAI2C,KAAKzC,EAAG,kBAAkB,CAACE,MAAM,CAAC,MAAQ,QAAQ6C,YAAYjD,EAAIkD,GAAG,CAAC,CAAC3B,IAAI,UAAU4B,GAAG,SAASC,GAAO,MAAO,CAAClD,EAAG,WAAW,CAACG,YAAY,CAAC,cAAc,OAAOD,MAAM,CAAC,KAAO,WAAW,KAAO,GAAGE,MAAM,CAACC,MAAO6C,EAAMC,IAAIqB,OAAQjE,SAAS,SAAUC,GAAMV,EAAIoB,KAAKgC,EAAMC,IAAK,SAAU3C,IAAMC,WAAW,0BAA0B,MAAK,EAAM,cAAcT,EAAG,kBAAkB,CAACE,MAAM,CAAC,MAAQ,QAAQ6C,YAAYjD,EAAIkD,GAAG,CAAC,CAAC3B,IAAI,UAAU4B,GAAG,SAASC,GAAO,MAAO,CAAClD,EAAG,WAAW,CAACG,YAAY,CAAC,cAAc,OAAOD,MAAM,CAAC,KAAO,WAAW,KAAO,GAAGE,MAAM,CAACC,MAAO6C,EAAMC,IAAImC,SAAU/E,SAAS,SAAUC,GAAMV,EAAIoB,KAAKgC,EAAMC,IAAK,WAAY3C,IAAMC,WAAW,4BAA4B,MAAK,EAAM,cAAcT,EAAG,kBAAkB,CAACE,MAAM,CAAC,MAAQ,KAAK,MAAQ,KAAK,MAAQ,UAAU6C,YAAYjD,EAAIkD,GAAG,CAAC,CAAC3B,IAAI,UAAU4B,GAAG,SAASC,GAAO,MAAO,CAAClD,EAAG,YAAY,CAACE,MAAM,CAAC,KAAO,SAAS,KAAO,iBAAiB,OAAS,IAAIY,GAAG,CAAC,MAAQ,SAASe,GAAQ,OAAO/B,EAAIqG,UAAUjD,EAAMC,IAAIzD,YAAY,MAAK,EAAM,eAAe,IAAI,GAAGI,EAAI2C,MAAM,IAAI,GAAGzC,EAAG,MAAM,CAACsD,YAAY,gBAAgBpD,MAAM,CAAC,KAAO,UAAUmF,KAAK,UAAU,CAACrF,EAAG,YAAY,CAACc,GAAG,CAAC,MAAQ,SAASe,GAAQ/B,EAAIgC,mBAAoB,KAAS,CAAChC,EAAIiC,GAAG,SAAS/B,EAAG,YAAY,CAACE,MAAM,CAAC,KAAO,WAAWY,GAAG,CAAC,MAAQhB,EAAIhB,cAAc,CAACgB,EAAIiC,GAAG,UAAU,IAAI,GAAG/B,EAAG,YAAY,CAACE,MAAM,CAAC,MAAQ,OAAO,QAAUJ,EAAIsG,gBAAgB,MAAQ,MAAM,OAAS,IAAItF,GAAG,CAAC,iBAAiB,SAASe,GAAQ/B,EAAIsG,gBAAgBvE,GAAQ,MAAQ/B,EAAIuG,eAAe,CAACrG,EAAG,UAAU,CAACU,IAAI,UAAUR,MAAM,CAAC,MAAQJ,EAAIwG,QAAQ,MAAQxG,EAAIyG,eAAe,CAACvG,EAAG,eAAe,CAACE,MAAM,CAAC,MAAQ,OAAO,cAAc,QAAQ,KAAO,WAAW,CAACF,EAAG,YAAY,CAACE,MAAM,CAAC,SAAW,GAAG,YAAc,SAASE,MAAM,CAACC,MAAOP,EAAIwG,QAAQ3B,OAAQpE,SAAS,SAAUC,GAAMV,EAAIoB,KAAKpB,EAAIwG,QAAS,SAAU9F,IAAMC,WAAW,mBAAmBX,EAAIqB,GAAIrB,EAAI2B,SAAS,SAASL,GAAM,OAAOpB,EAAG,YAAY,CAACqB,IAAID,EAAKuD,OAAOzE,MAAM,CAAC,MAAQkB,EAAKM,SAAS,MAAQN,EAAKuD,aAAY,IAAI,IAAI,GAAG3E,EAAG,MAAM,CAACsD,YAAY,gBAAgBpD,MAAM,CAAC,KAAO,UAAUmF,KAAK,UAAU,CAACrF,EAAG,YAAY,CAACc,GAAG,CAAC,MAAQ,SAASe,GAAQ/B,EAAIsG,iBAAkB,KAAS,CAACtG,EAAIiC,GAAG,SAAS/B,EAAG,YAAY,CAACE,MAAM,CAAC,KAAO,WAAWY,GAAG,CAAC,MAAQhB,EAAI0G,UAAU,CAAC1G,EAAIiC,GAAG,UAAU,IAAI,GAAG/B,EAAG,YAAY,CAACE,MAAM,CAAC,MAAQ,SAAS,QAAUJ,EAAI2G,mBAAmB,MAAQ,MAAM,OAAS,IAAI3F,GAAG,CAAC,iBAAiB,SAASe,GAAQ/B,EAAI2G,mBAAmB5E,GAAQ,MAAQ/B,EAAI4G,kBAAkB,CAAC1G,EAAG,UAAU,CAACU,IAAI,aAAaR,MAAM,CAAC,MAAQJ,EAAI6G,WAAW,MAAQ7G,EAAI8G,kBAAkB,CAAC5G,EAAG,eAAe,CAACE,MAAM,CAAC,MAAQ,OAAO,cAAc,QAAQ,KAAO,WAAW,CAACF,EAAG,YAAY,CAACE,MAAM,CAAC,SAAW,GAAG,YAAc,SAASE,MAAM,CAACC,MAAOP,EAAI6G,WAAWhC,OAAQpE,SAAS,SAAUC,GAAMV,EAAIoB,KAAKpB,EAAI6G,WAAY,SAAUnG,IAAMC,WAAW,sBAAsBX,EAAIqB,GAAIrB,EAAI2B,SAAS,SAASL,GAAM,OAAOpB,EAAG,YAAY,CAACqB,IAAID,EAAKuD,OAAOzE,MAAM,CAAC,MAAQkB,EAAKM,SAAS,MAAQN,EAAKuD,aAAY,IAAI,IAAI,GAAG3E,EAAG,MAAM,CAACsD,YAAY,gBAAgBpD,MAAM,CAAC,KAAO,UAAUmF,KAAK,UAAU,CAACrF,EAAG,YAAY,CAACc,GAAG,CAAC,MAAQ,SAASe,GAAQ/B,EAAI2G,oBAAqB,KAAS,CAAC3G,EAAIiC,GAAG,SAAS/B,EAAG,YAAY,CAACE,MAAM,CAAC,KAAO,WAAWY,GAAG,CAAC,MAAQhB,EAAI+G,aAAa,CAAC/G,EAAIiC,GAAG,UAAU,IAAI,GAAG/B,EAAG,YAAY,CAACE,MAAM,CAAC,QAAUJ,EAAIgH,oBAAoBhG,GAAG,CAAC,iBAAiB,SAASe,GAAQ/B,EAAIgH,mBAAmBjF,GAAQ,MAAQ,SAASA,GAAQ/B,EAAIgH,oBAAqB,KAAS,CAAC9G,EAAG,MAAM,CAACG,YAAY,CAAC,MAAQ,QAAQD,MAAM,CAAC,IAAMJ,EAAI6D,OAAO7D,EAAIiH,eAAe,IAAM,SAAS,IAEj3iBC,EAAkB,G,4DCoaP,G,oBAAA,CACf1F,KAAA,iBACAtC,OACA,OACA4F,kBAAA,GACAC,uBAAA,CACAoC,cAAA,QACA5G,MAAA,KACAmC,MAAA,OACA0E,UAAA,GAEAnC,eAAAoC,4CAAAC,yBACAzD,OAAAwD,4CAAAE,kBACA/G,WAAA,GACAK,eAAA,GACAE,aAAA,CACAyG,SAAA,WACA9E,MAAA,QAEA+E,gBAAA,CACAN,cAAA,QACAO,eAAA,EACAnH,MAAA,KACAmC,MAAA,OACA0E,UAAA,GAEAtI,UAAA,CAEA,gBACA,gBACA,iBACA,mBACA,SACA,aAGA6I,WAAA,0GAEAxG,aAAA,CACA,CACAvB,GAAA,EACA4B,KAAA,OAEA,CACA5B,GAAA,EACA4B,KAAA,OAEA,CACA5B,GAAA,EACA4B,KAAA,OAEA,CACA5B,GAAA,EACA4B,KAAA,OAEA,CACA5B,GAAA,EACA4B,KAAA,QAIAG,QAAA,GAEAoB,aAAA,GAEAD,SAAA,EAEAZ,eAAA,GAEAI,WAAA,CACA,CACA,WACA,eAEA,CACA,aACA,YAEA,CACA,cACA,gBAIAD,UAAA,GAEA+B,MAAA,EAEAkC,iBAAA,EAEAK,oBAAA,EAEA3E,mBAAA,EAEAwE,QAAA,CACA3B,OAAA,IAEAgC,WAAA,CACAhC,OAAA,IAGA4B,aAAA,CACA5B,OAAA,CACA,CACA+C,UAAA,EACAC,QAAA,cACAC,QAAA,UAKAhB,gBAAA,CACAjC,OAAA,CACA,CACA+C,UAAA,EACAC,QAAA,aACAC,QAAA,UAKA/B,UAAA,CACA5E,aAAA,EACAwD,cAAA,EACAK,aAAA,KACAH,OAAA,GACA/C,gBAAA,GACAiG,OAAA,GACAvC,SAAA,GACAwC,aAAAC,aAAAC,QAAA,YAEAxD,OAAA,IAGAsB,eAAA,CACA7E,aAAA,CACA,CACAyG,UAAA,EACAC,QAAA,UACAC,QAAA,SAGAnD,cAAA,CACA,CACAiD,UAAA,EACAC,QAAA,UACAC,QAAA,SAGAjD,OAAA,CACA,CACA+C,UAAA,EACAC,QAAA,QACAC,QAAA,SAGAhG,gBAAA,CACA,CACA8F,UAAA,EACAC,QAAA,UACAC,QAAA,SAGA9C,aAAA,CACA,CACA4C,UAAA,EACAC,QAAA,UACAC,QAAA,UAKArD,kBAAA,CACAtD,aAAA,CACA,CACAyG,UAAA,EACAC,QAAA,UACAC,QAAA,SAGAnD,cAAA,CACA,CACAiD,UAAA,EACAC,QAAA,UACAC,QAAA,SAGAjD,OAAA,CACA,CACA+C,UAAA,EACAC,QAAA,QACAC,QAAA,SAGAhG,gBAAA,CACA,CACA8F,UAAA,EACAC,QAAA,UACAC,QAAA,SAGA9C,aAAA,CACA,CACA4C,UAAA,EACAC,QAAA,UACAC,QAAA,UAKAd,oBAAA,EAEAC,eAAA,GAEAzC,aAAA,CACAlG,WAAA,GACA0G,aAAA,KACA7D,aAAA,EACAwD,cAAA,EACAE,OAAA,GACA/C,gBAAA,GACAiG,OAAA,GACAvC,SAAA,GACAwC,aAAAC,aAAAC,QAAA,YAEAxD,OAAA,IAGAH,sBAAA,EACA4D,UAAA,EACAC,iBAAA,EACAC,QAAA,QACAC,aAAA,CACAC,MAAA,GACAC,KAAA,IAEAC,MAAA,CACAF,MAAA,CACA,CAAAX,UAAA,EAAAC,QAAA,SAAAC,QAAA,SAEAU,KAAA,CACA,CAAAZ,UAAA,EAAAC,QAAA,SAAAC,QAAA,YAKAY,UACA,KAAAC,iBACA,KAAAC,sBACA,KAAAC,mBAEAC,QAAA,CAEAH,iBACAI,OAAAC,UAAAC,KAAAC,IACA,KAAArI,eAAAqI,EAAAhK,KACA,KAAA4F,kBAAAoE,EAAAhK,QAIA0J,sBACAlH,OAAAyH,kBAAAF,KAAAC,IACA,MAAAA,EAAAV,OACA,KAAA7G,QAAAuH,EAAAhK,SAKAgC,WAAAkI,GACA,KAAAtK,UAAAqC,aAAAiI,EACA,KAAAP,mBAGApH,WAAA2H,GACA,KAAAtK,UAAA4C,aAAA0H,EACA,KAAAP,mBAGAhH,gBAEA,KAAAgH,mBAGAA,kBACA5J,OAAAJ,YAAA,KAAAC,WAAAmK,KAAAC,IACA,MAAAA,EAAAV,OACA,KAAAzF,aAAAmG,EAAAhK,UACA,KAAAkF,MAAA8E,EAAAhK,KAAAkF,MACA,KAAAtB,SAAA,MAKAE,yBAAAoG,GACA,KAAAlH,eAAAkH,GAGAhH,gBAAAgH,GAEA,KAAA/G,UAAA,GACA,WAAA+G,EACA,KAAAC,kBACA,QAAAD,EACA,KAAA9C,iBAAA,EACA,WAAA8C,IACA,KAAAzC,oBAAA,IAGA0C,kBACA,IAAA1K,EAAA,GACA,KAAAuD,eAAAoH,IAAAhI,IACA3C,EAAA4K,KAAAjI,EAAA1B,MAGAX,OAAAF,eAAA,aAAAJ,EAAA6K,KAAA,OAAAP,KAAAC,IACA,MAAAA,EAAAV,OACA,KAAAiB,QAAA,CACAC,MAAA,OACA7B,QAAA,OACA8B,KAAA,UACAC,SAAA,MAEA,KAAAf,sBAKAxE,iBAAA+E,GACA,KAAAtK,UAAAqF,SAAAiF,EACA,KAAAP,mBAGAvE,oBAAA8E,GACA,KAAAtK,UAAAoF,OAAAkF,EACA,KAAAP,mBAGAtC,eAEA,KAAAsD,MAAA,WAAAC,eAEAlD,kBAEA,KAAAiD,MAAA,cAAAC,eAEAhE,iBACA,KAAA+D,MAAA,aAAAC,eAGApD,UACAqD,OAAAC,mBAAA,KAAAH,MAAA,gBACA,IAAAlL,EAAA,GACAsL,EAAA,KAAAzD,QAAA3B,OAEA,KAAA3C,eAAAoH,IAAAhI,IACA3C,EAAA4K,KAAAjI,EAAA1B,MAEA8B,OAAAwI,gBAAA,CACA,YAAAvL,EAAA6K,KAAA,KACA,MAAAS,EAAAT,KAAA,OACAP,KAAAC,IACA,MAAAA,EAAAV,OACA,KAAAK,kBACA,KAAAY,QAAA,CACAC,MAAA,OACA7B,QAAAqB,EAAArB,QACA8B,KAAA,UACAC,SAAA,OAGA,KAAAtD,iBAAA,KAEA,gBAGAS,aACAgD,OAAAC,mBAAA,KAAAH,MAAA,mBACA,IAAAlL,EAAA,GACAsL,EAAA,KAAApD,WAAAhC,OAEA,KAAA3C,eAAAoH,IAAAhI,IACA3C,EAAA4K,KAAAjI,EAAA1B,MAGA8B,OAAAyI,mBAAA,CACA,YAAAxL,EAAA6K,KAAA,KACA,MAAAS,EAAAT,KAAA,OACAP,KAAAC,IACA,MAAAA,EAAAV,OACA,KAAAK,kBACA,KAAAY,QAAA,CACAC,MAAA,OACA7B,QAAAqB,EAAArB,QACA8B,KAAA,UACAC,SAAA,OAGA,KAAAjD,oBAAA,KAEA,eAGAzB,cAAAkF,GACA,KAAAnD,eAAAmD,EAAAC,SAAAnL,KACA,KAAA8H,oBAAA,GAGAf,aAAAmE,EAAAE,GACA,KAAAvE,UAAAgC,OAAAuB,IAAA,CAAAhI,EAAAiB,KACAjB,IAAA8I,EAAAC,SAAAnL,MAAA,KAAA6G,UAAAgC,OAAAwC,OAAAhI,EAAA,MAIA4C,mBAAAiF,EAAAE,GACA,KAAA9F,aAAAuD,OAAAuB,IAAA,CAAAhI,EAAAiB,KACAjB,IAAA8I,EAAAC,SAAAnL,MAAA,KAAAsF,aAAAuD,OAAAwC,OAAAhI,EAAA,MAIA8C,mBAAA+E,GACA,MAAAI,EAAA,eAAAJ,EAAAT,MACA,cAAAS,EAAAT,MACA,cAAAS,EAAAT,KACAc,EAAAL,EAAAM,KAAA,aASA,OAPAF,GACA,KAAAG,SAAAC,MAAA,uBAGAH,GACA,KAAAE,SAAAC,MAAA,sBAEAJ,GAAAC,GAGAvE,iBAAAmE,EAAAD,EAAAE,GACA,KAAAvE,UAAAgC,OAAAwB,KAAAc,EAAAnL,OAGAoG,uBAAA+E,EAAAD,EAAAE,GACA,KAAA9F,aAAAuD,OAAAwB,KAAAc,EAAAnL,OAGAiH,UAAAwD,GACA,KAAA5D,UAAArB,OAAA6E,KAAA,CACA3J,GAAA,KAAAmG,UAAArB,OAAAvC,OACAyD,OAAA,IAAA+D,EACAjF,OAAA,GACAc,SAAA,MAIAC,gBAAAkE,GACA,KAAAnF,aAAAE,OAAA6E,KAAA,CACA3J,GAAA,KAAA4E,aAAAE,OAAAvC,OACAyD,OAAA,IAAA+D,EACAjF,OAAA,GACAc,SAAA,MAIAa,UAAAzG,GACA,KAAAmG,UAAArB,OAAA4E,IAAA,CAAAhI,EAAAiB,KACAjB,EAAA1B,QAAA,KAAAmG,UAAArB,OAAA6F,OAAAhI,EAAA,MAIAsD,gBAAAjG,GACA,KAAA4E,aAAAE,OAAA4E,IAAA,CAAAhI,EAAAiB,KACAjB,EAAA1B,QAAA,KAAA4E,aAAAE,OAAA6F,OAAAhI,EAAA,MAIA6D,YAAAV,EAAA9F,GACA8F,EACA,SAAAK,UAAA5E,cAAA,SAAA4E,UAAA5E,cAEA,KAAA4E,UAAArB,OAAA4E,IAAAhI,IACAA,EAAAsE,QAAA,IAEA,KAAAG,UAAArB,OAAA4E,IAAAhI,IACAA,EAAA1B,SAAA0B,EAAAsE,QAAA,MAGA,KAAAG,UAAArB,OAAA4E,IAAAhI,IACAA,EAAA1B,SAAA0B,EAAAsE,QAAA,KAIA,KAAAG,UAAArB,OAAA4E,IAAAhI,IACAA,EAAA1B,SAAA0B,EAAAsE,QAAA,MAKAD,kBAAAD,EAAA9F,GACA8F,EACA,SAAAlB,aAAArD,cAAA,SAAAqD,aAAArD,cAEA,KAAAqD,aAAAE,OAAA4E,IAAAhI,IACAA,EAAAsE,QAAA,IAEA,KAAApB,aAAAE,OAAA4E,IAAAhI,IACAA,EAAA1B,SAAA0B,EAAAsE,QAAA,MAGA,KAAApB,aAAAE,OAAA4E,IAAAhI,IACAA,EAAA1B,SAAA0B,EAAAsE,QAAA,KAIA,KAAApB,aAAAE,OAAA4E,IAAAhI,IACAA,EAAA1B,SAAA0B,EAAAsE,QAAA,MAKA5G,cACA,KAAA6K,MAAA,aAAAgB,SAAAC,IACA,GAAAA,GAAA,KAAA/E,UAAArB,OAAAqG,KAAAzJ,KAAAsE,SAAA,SAAAG,UAAA5E,aACAlC,OAAAD,YAAA,KAAA+G,WAAAkD,KAAAC,IACA,MAAAA,EAAAV,OACA,KAAAxG,mBAAA,EACA,KAAA6G,kBACA,KAAAY,QAAA,CACAC,MAAA,OACA7B,QAAA,SACA8B,KAAA,UACAC,SAAA,MAEA,KAAAC,MAAAmB,UAAAC,oBAGA,IAAAH,IAAA,KAAA/E,UAAArB,OAAAqG,KAAAzJ,KAAAsE,SAAA,SAAAG,UAAA5E,aAEA,OADA,KAAAwJ,SAAAC,MAAA,YACA,EACA,GAAAE,GAAA,SAAA/E,UAAA5E,aAEA,KAAA4E,UAAArB,OAAA,GACAzF,OAAAD,YAAA,KAAA+G,WAAAkD,KAAAC,IACA,MAAAA,EAAAV,OACA,KAAAxG,mBAAA,EACA,KAAA6G,kBACA,KAAAY,QAAA,CACAC,MAAA,OACA7B,QAAA,SACA8B,KAAA,UACAC,SAAA,MAEA,KAAAC,MAAAmB,UAAAC,qBAGA,IAAAH,EAEA,OADA,KAAAH,SAAAC,MAAA,YACA,MAKAnH,SAAA7D,GACAX,OAAAZ,gBAAAuB,GAAAqJ,KAAAC,IACA,MAAAA,EAAAV,OACA,IAAAU,EAAAhK,KAAAiC,cACA+H,EAAAhK,KAAAwF,OAAA4E,IAAAhI,IACAA,EAAAsE,OAAA,SAAAtE,EAAAsE,SAGA,KAAApB,aAAA0E,EAAAhK,KACA,KAAAsF,aAAAQ,aAAAkG,OAAAhC,EAAAhK,KAAA8F,cACAmG,QAAAC,IAAA,KAAA5G,cAEA,YAAAA,aAAAuD,SAAA,KAAAvD,aAAAuD,OAAA,KAEA,KAAAxD,sBAAA,KAIAnF,iBACA,KAAAyK,MAAA,gBAAAgB,SAAAC,IACA,GAAAA,GAAA,SAAAtG,aAAArD,cAAA,KAAAqD,aAAAE,OAAAqG,KAAAzJ,KAAAsE,QAEA3G,OAAAG,eAAA,KAAAoF,cAAAyE,KAAAC,IACA,MAAAA,EAAAV,OACA,KAAAjE,sBAAA,EACA,KAAAsE,kBACA,KAAAY,QAAA,CACAC,MAAA,OACA7B,QAAA,SACA8B,KAAA,UACAC,SAAA,MAEA,KAAAC,MAAAwB,aAAAJ,oBAGA,IAAAH,GAAA,SAAAtG,aAAArD,eAAA,KAAAqD,aAAAE,OAAAqG,KAAAzJ,KAAAsE,QAEA,OADA,KAAA+E,SAAAC,MAAA,YACA,EACA,GAAAE,GAAA,SAAAtG,aAAArD,aAEA,KAAA4E,UAAArB,OAAA,GACAzF,OAAAG,eAAA,KAAAoF,cAAAyE,KAAAC,IACA,MAAAA,EAAAV,OACA,KAAAjE,sBAAA,EACA,KAAAsE,kBACA,KAAAY,QAAA,CACAC,MAAA,OACA7B,QAAA,SACA8B,KAAA,UACAC,SAAA,MAEA,KAAAC,MAAAwB,aAAAJ,qBAGA,IAAAH,EAEA,OADA,KAAAH,SAAAC,MAAA,YACA,MAKA3J,oBACA,KAAAnC,UAAAwM,cAAA,KAAAzB,MAAA0B,KAAAC,iBAAAhC,KAAA,KACA,KAAAX,mBAGA/H,WAAAP,EAAArB,GACA,OAAAqB,IACA,IAAArB,EAAAsC,KAAAiK,QAAAlL,KAGAmL,SAAA,CAEAtG,UACA,OACAuG,cAAA1D,aAAAC,QAAA,wBAIA0D,MAAA,CACApL,WAAA4I,GACA,KAAAS,MAAA0B,KAAAM,OAAAzC,OCtiCsW,I,wBCQlW0C,EAAY,eACd,EACA/L,EACAmH,GACA,EACA,KACA,WACA,MAIa,aAAA4E,E,sECnBf,gBAEe,QAEb9C,QAAQ+C,GACN,OAAOxN,eAAQ,CACbC,IAAK,0BACLC,OAAQ,MACRG,OAAOmN,KAGXC,WAAWD,GACT,OAAOxN,eAAQ,CACbC,IAAK,6BACLC,OAAQ,MACRG,OAAQmN,KAGZE,IAAIC,GACF,OAAO3N,eAAQ,CACbC,IAAK,0BACLC,OAAQ,OACRS,KAAMgN,KAGVC,OAAOD,GACL,OAAO3N,eAAQ,CACbC,IAAK,6BACLC,OAAQ,OACRS,KAAMgN,O,oCC7BZ,W,oCCAA,gBAEe,QACbE,6BAA8BtN,GAC5B,OAAOP,eAAQ,CACbC,IAAK,uCACLC,OAAQ,MACRG,OAAQE,KAGZuN,mBAAoBC,GAClB,OAAO/N,eAAQ,CACbC,IAAK,8BACLC,OAAQ,MACRG,OAAQ0N,KAGZC,gBAAiB7K,GACf,OAAOnD,eAAQ,CACbC,IAAK,2BACLC,OAAQ,OACRS,KAAMwC,KAGVyH,kBACE,OAAO5K,eAAQ,CACbC,IAAK,2BACLC,OAAQ,SAGZyL,gBAAiBtL,GACf,OAAOL,eAAQ,CACbC,IAAK,2BACLC,OAAQ,MACRG,OAAQA,KAGZuL,mBAAoBvL,GAClB,OAAOL,eAAQ,CACbC,IAAK,8BACLC,OAAQ,MACRG,OAAQA,KAGZ4N,kBAAmB5N,GACjB,OAAOL,eAAQ,CACbC,IAAK,4BACLC,OAAQ,MACRG,OAAQA,O,kCChDd,gBAEe,QACb6N,iBACE,OAAOlO,eAAQ,CACbC,IAAK,yBACLC,OAAQ,SAGZiO,kBAAmBC,GACjB,OAAOpO,eAAQ,CACbC,IAAK,4BACLC,OAAQ,OACRS,KAAMyN,KAGVC,aAAcC,GACZ,OAAOtO,eAAQ,CACbC,IAAM,wBACNI,OAAQiO,EACRpO,OAAQ,SAGZqO,YAAalO,GACX,OAAOL,eAAQ,CACbC,IAAK,iBACLC,OAAQ,MACRG,OAAQA,KAGZmO,YAAaC,EAAWpO,GACtB,OAAOL,eAAQ,CACbC,IAAM,qBAAoBwO,EAC1BvO,OAAQ,MACRG,OAAQA,KAGZqO,QAAS/N,GACP,OAAOX,eAAQ,CACbC,IAAK,iBACLC,OAAQ,OACRS,KAAMA,O,kCCzCZ,gBAEA,MAAMgO,EAAcA,IACXC,KAAKC,MAAsB,IAAhBD,KAAKE,UAGnBrD,EAAqBA,CAACsD,EAAQC,EAAS1F,EAAU,OAAQ2F,EAAO,gBAE/DF,GAGLA,EAAOzC,SAASC,IACd,IAAIA,EAWF,OAPA2C,aAAIC,UAAUjE,QAAQ,CACpBC,MAAO,OACP7B,QAASA,EACT8B,KAAM,QACNC,SAAU,MAEZ4D,KACO,EAVPD,IACAD,EAAOxD,iBAeP6D,EAAoBA,CAACL,EAAQC,EAAS1F,EAAS2F,EAAO,gBAErDF,GAGLA,EAAOzC,SAASC,IACd,IAAIA,EAUF,OAPA2C,aAAIC,UAAUjE,QAAQ,CACpBC,MAAO,OACP7B,QAASA,EACT8B,KAAM,QACNC,SAAU,MAEZ4D,KACO,EATPD,OAcS,QACbvD,qBACA2D,oBACAT","file":"js/chunk-8538c498.70aac8ff.js","sourcesContent":["import request from '@/utils/request'\n\nexport default {\n  getQuestionById (questionId) {\n    return request({\n      url: `/student/getQuestionById/${questionId}`,\n      method: 'get'\n    })\n  },\n  getQuestionByIds (questionIds) {\n    return request({\n      url: `/student/getQuestionByIds`,\n      params: questionIds,\n      method: 'get'\n    })\n  },\n  getQuestion (queryInfo) {\n    return request({\n      url: '/teacher/getQuestion',\n      method: 'get',\n      params: queryInfo\n    })\n  },\n  deleteQuestion (questionIds) {\n    return request({\n      url: '/teacher/deleteQuestion',\n      method: 'get',\n      params: questionIds\n    })\n  },\n  addQuestion (question) {\n    return request({\n      url: '/teacher/addQuestion',\n      method: 'post',\n      data: question\n    })\n  },\n  importQuestion (question) {\n    return request({\n      url: '/teacher/importQuestion',\n      method: 'post',\n      data: question\n    })\n  },\n  updateQuestion (question) {\n    return request({\n      url: '/teacher/updateQuestion',\n      method: 'post',\n      data: question\n    })\n  },\n  getQuestionByBankIdAndType(params){\n    return request({\n      url: '/public/getQuestionByBankIdAndType',\n      method: 'get',\n      params: params\n    })\n  }\n}\n","import request from '@/utils/request'\n\nexport default {\n  login (loginUser) {\n    return request({\n      url: '/common/login',\n      method: 'post',\n      data: loginUser\n    })\n  },\n  register (registerUser) {\n    return request({\n      url: '/common/register',\n      method: 'post',\n      data: registerUser\n    })\n  },\n  checkToken () {\n    return request({\n      url: '/public/checkToken',\n      method: 'get'\n    })\n  },\n  getCode (id) {\n    return request({\n      url: `/util/getCode?id=${id}`,\n      method: 'get'\n    })\n  },\n  checkUsername (username) {\n    return request({\n      url: `/common/check/${username}`,\n      method: 'get'\n    })\n  },\n}\n","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('el-container',[_c('el-aside',{attrs:{\"width\":\"250px\"}},[_c('el-input',{staticStyle:{\"margin-left\":\"10px\"},attrs:{\"placeholder\":\"输入关键字进行过滤\"},model:{value:(_vm.filterText),callback:function ($$v) {_vm.filterText=$$v},expression:\"filterText\"}}),_c('el-tree',{ref:\"tree\",staticStyle:{\"margin-top\":\"15px\"},attrs:{\"data\":_vm.professionData,\"show-checkbox\":\"\",\"check-on-click-node\":\"\",\"expand-on-click-node\":false,\"node-key\":\"id\",\"highlight-current\":\"\",\"filter-node-method\":_vm.filterNode,\"props\":_vm.defaultProps},on:{\"check\":_vm.TreeCurrentChange}})],1),_c('el-container',[_c('el-header',{attrs:{\"height\":\"220\"}},[_c('el-row',[_c('el-select',{attrs:{\"clearable\":\"\",\"placeholder\":\"请选择题目类型\"},on:{\"change\":_vm.typeChange},model:{value:(_vm.queryInfo.questionType),callback:function ($$v) {_vm.$set(_vm.queryInfo, \"questionType\", $$v)},expression:\"queryInfo.questionType\"}},_vm._l((_vm.questionType),function(item){return _c('el-option',{key:item.id,attrs:{\"label\":item.name,\"value\":item.id}})}),1),_c('el-select',{staticStyle:{\"margin-left\":\"5px\"},attrs:{\"clearable\":\"\",\"placeholder\":\"请选择题库\"},on:{\"change\":_vm.bankChange},model:{value:(_vm.queryInfo.questionBank),callback:function ($$v) {_vm.$set(_vm.queryInfo, \"questionBank\", $$v)},expression:\"queryInfo.questionBank\"}},_vm._l((_vm.allBank),function(item){return _c('el-option',{key:item.id,attrs:{\"label\":item.bankName,\"value\":item.bankName}})}),1),_c('el-input',{staticStyle:{\"margin-left\":\"5px\",\"width\":\"220px\"},attrs:{\"placeholder\":\"题目内容\",\"prefix-icon\":\"el-icon-search\"},on:{\"blur\":_vm.contentChange},model:{value:(_vm.queryInfo.questionContent),callback:function ($$v) {_vm.$set(_vm.queryInfo, \"questionContent\", $$v)},expression:\"queryInfo.questionContent\"}}),_c('el-button',{staticStyle:{\"float\":\"right\",\"margin-right\":\"20px\"},attrs:{\"type\":\"primary\",\"icon\":\"el-icon-plus\",\"size\":\"medium\"},on:{\"click\":function($event){_vm.addQuTableVisible = true}}},[_vm._v(\"添加 \")])],1)],1),_c('el-main',[(_vm.selectionTable.length !== 0)?_c('el-select',{staticStyle:{\"margin-bottom\":\"25px\"},attrs:{\"clearable\":\"\",\"placeholder\":'已选择' + _vm.selectionTable.length + '项'},on:{\"change\":_vm.operationChange},model:{value:(_vm.operation),callback:function ($$v) {_vm.operation=$$v},expression:\"operation\"}},_vm._l((_vm.optionInfo),function(item,index){return _c('el-option',{key:index,attrs:{\"value\":item.desc}},[_c('span',{staticStyle:{\"float\":\"left\"}},[_vm._v(_vm._s(item.label))]),_c('span',{staticStyle:{\"float\":\"right\",\"color\":\"#8492a6\",\"font-size\":\"13px\"}},[_vm._v(_vm._s(item.desc))])])}),1):_vm._e(),_c('el-table',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.loading),expression:\"loading\"}],ref:\"questionTable\",staticStyle:{\"width\":\"100%\"},attrs:{\"highlight-current-row\":\"\",\"border\":true,\"data\":_vm.questionInfo,\"tooltip-effect\":\"dark\"},on:{\"selection-change\":_vm.handleTableSectionChange}},[_c('el-table-column',{attrs:{\"align\":\"center\",\"type\":\"selection\",\"width\":\"55\"}}),_c('el-table-column',{attrs:{\"label\":\"试题内容\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('div',[_c('div',[_vm._v(\" [\"),(scope.row.quType === 1)?_c('span',[_vm._v(\"单选题\")]):(scope.row.quType === 2)?_c('span',[_vm._v(\"多选题\")]):(scope.row.quType === 3)?_c('span',[_vm._v(\"判断题\")]):(scope.row.quType === 4)?_c('span',[_vm._v(\"填空题\")]):(scope.row.quType === 5)?_c('span',[_vm._v(\"简答题\")]):_vm._e(),_vm._v(\"] [\"),(scope.row.level === 1)?_c('span',[_vm._v(\"简单\")]):_vm._e(),(scope.row.level === 2)?_c('span',[_vm._v(\"中等\")]):_vm._e(),(scope.row.level === 3)?_c('span',[_vm._v(\"困难\")]):_vm._e(),_vm._v(\"] \"),_c('span',{staticClass:\"quContent\",on:{\"click\":function($event){return _vm.updateQu(scope.row.id)}}},[_vm._v(_vm._s(scope.row.quContent))])]),(scope.row.image!=null && scope.row.image!=='')?_c('div',{staticStyle:{\"margin-top\":\"5px\"}},_vm._l((scope.row.image.split(',')),function(url){return _c('img',{staticStyle:{\"max-width\":\"400px\",\"max-height\":\"120px\",\"margin-right\":\"20px\"},attrs:{\"src\":_vm.imgUrl+url}})}),0):_vm._e(),_c('div',{staticClass:\"qu-knowledgeName\"},[_c('div',[_vm._v(\"所属题库：\"+_vm._s(scope.row.quBankName))]),_c('div',{staticStyle:{\"padding-right\":\"70px\"}},[_vm._v(_vm._s(new Date(scope.row.createTime).toLocaleDateString()))])])])]}}])})],1),_c('el-pagination',{staticStyle:{\"margin-top\":\"25px\"},attrs:{\"current-page\":_vm.queryInfo.pageNo,\"page-sizes\":[10, 20, 30, 50],\"page-size\":_vm.queryInfo.pageSize,\"layout\":\"total, sizes, prev, pager, next, jumper\",\"total\":_vm.total},on:{\"size-change\":_vm.handleSizeChange,\"current-change\":_vm.handleCurrentChange}})],1)],1),_c('el-dialog',{attrs:{\"title\":\"更新题目\",\"visible\":_vm.updateQuTableVisible,\"width\":\"50%\",\"center\":\"\"},on:{\"update:visible\":function($event){_vm.updateQuTableVisible=$event}}},[_c('el-card',[_c('el-form',{ref:\"updateQuForm\",attrs:{\"model\":_vm.updateQuForm,\"rules\":_vm.updateQuFormRules}},[_c('el-form-item',{attrs:{\"label\":\"题目类型\",\"label-width\":\"120px\",\"prop\":\"questionType\"}},[_c('el-select',{attrs:{\"disabled\":\"\",\"placeholder\":\"请选择\"},on:{\"change\":function($event){_vm.updateQuForm.answer =  []}},model:{value:(_vm.updateQuForm.questionType),callback:function ($$v) {_vm.$set(_vm.updateQuForm, \"questionType\", $$v)},expression:\"updateQuForm.questionType\"}},_vm._l((_vm.questionType),function(item){return _c('el-option',{key:item.id,attrs:{\"label\":item.name,\"value\":item.id}})}),1)],1),_c('el-form-item',{attrs:{\"label\":\"难度等级\",\"label-width\":\"120px\",\"prop\":\"questionLevel\"}},[_c('el-select',{attrs:{\"placeholder\":\"请选择\"},model:{value:(_vm.updateQuForm.questionLevel),callback:function ($$v) {_vm.$set(_vm.updateQuForm, \"questionLevel\", $$v)},expression:\"updateQuForm.questionLevel\"}},[_c('el-option',{attrs:{\"value\":parseInt(1),\"label\":\"简单\"}}),_c('el-option',{attrs:{\"value\":parseInt(2),\"label\":\"中等\"}}),_c('el-option',{attrs:{\"value\":parseInt(3),\"label\":\"困难\"}})],1)],1),_c('el-form-item',{attrs:{\"label\":\"归属题库\",\"label-width\":\"120px\",\"prop\":\"bankId\"}},[_c('el-select',{attrs:{\"multiple\":\"\",\"placeholder\":\"请选择\"},model:{value:(_vm.updateQuForm.bankId),callback:function ($$v) {_vm.$set(_vm.updateQuForm, \"bankId\", $$v)},expression:\"updateQuForm.bankId\"}},_vm._l((_vm.allBank),function(item){return _c('el-option',{key:item.bankId,attrs:{\"label\":item.bankName,\"value\":item.bankId}})}),1)],1),_c('el-form-item',{attrs:{\"label\":\"归属课程\",\"label-width\":\"120px\",\"prop\":\"professionId\"}},[_c('el-cascader',{staticStyle:{\"width\":\"450px\"},attrs:{\"options\":_vm.professionOptions,\"props\":_vm.professionCascadeProps},model:{value:(_vm.updateQuForm.professionId),callback:function ($$v) {_vm.$set(_vm.updateQuForm, \"professionId\", $$v)},expression:\"updateQuForm.professionId\"}})],1),_c('el-form-item',{attrs:{\"label\":\"题目内容\",\"label-width\":\"120px\",\"prop\":\"questionContent\"}},[_c('el-input',{staticStyle:{\"margin-left\":\"5px\"},attrs:{\"type\":\"textarea\",\"rows\":2},model:{value:(_vm.updateQuForm.questionContent),callback:function ($$v) {_vm.$set(_vm.updateQuForm, \"questionContent\", $$v)},expression:\"updateQuForm.questionContent\"}})],1),_c('el-form-item',{attrs:{\"label\":\"题目图片\",\"label-width\":\"120px\"}},[_c('el-upload',{ref:\"updateUpload\",attrs:{\"action\":_vm.uploadImageUrl + '/teacher/uploadQuestionImage',\"on-preview\":_vm.uploadPreview,\"on-remove\":_vm.handleUpdateRemove,\"headers\":_vm.headers,\"before-upload\":_vm.beforeAvatarUpload,\"list-type\":\"picture\",\"on-success\":_vm.updateUploadImgSuccess,\"name\":\"file\"}},[_c('el-button',{attrs:{\"size\":\"small\",\"type\":\"primary\"}},[_vm._v(\"点击上传\")]),_c('div',{staticClass:\"el-upload__tip\",attrs:{\"slot\":\"tip\"},slot:\"tip\"},[_vm._v(\"只能上传jpg/png文件，且不超过10M\")])],1)],1),_c('el-form-item',{attrs:{\"label\":\"整题解析\",\"label-width\":\"120px\",\"prop\":\"analysis\"}},[_c('el-input',{staticStyle:{\"margin-left\":\"5px\"},attrs:{\"type\":\"textarea\",\"rows\":2},model:{value:(_vm.updateQuForm.analysis),callback:function ($$v) {_vm.$set(_vm.updateQuForm, \"analysis\", $$v)},expression:\"updateQuForm.analysis\"}})],1),(_vm.updateQuForm.questionType!==5)?_c('el-button',{staticStyle:{\"margin-left\":\"40px\"},attrs:{\"type\":\"primary\",\"plain\":\"\",\"size\":\"small\",\"icon\":\"el-icon-plus\"},on:{\"click\":function($event){return _vm.addUpdateAnswer(_vm.updateQuForm.questionType)}}},[_vm._v(\" 添加 \")]):_vm._e(),(_vm.updateQuForm.questionType !== 5)?_c('el-form-item',{attrs:{\"prop\":\"answer\"}},[_c('el-table',{staticStyle:{\"width\":\"96%\",\"margin-left\":\"40px\",\"margin-top\":\"10px\"},attrs:{\"data\":_vm.updateQuForm.answer,\"border\":\"\"}},[(_vm.updateQuForm.questionType !== 4)?_c('el-table-column',{attrs:{\"label\":\"是否答案\",\"width\":\"80\",\"align\":\"center\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-checkbox',{on:{\"change\":checked=>_vm.checkUpdateAnswer(checked,scope.row.id)},model:{value:(scope.row.isTrue),callback:function ($$v) {_vm.$set(scope.row, \"isTrue\", $$v)},expression:\"scope.row.isTrue\"}},[_vm._v(\"答案 \")])]}}],null,false,3838223355)}):_vm._e(),_c('el-table-column',{attrs:{\"label\":\"答案内容\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-input',{staticStyle:{\"margin-left\":\"5px\"},attrs:{\"type\":\"textarea\",\"rows\":2},model:{value:(scope.row.answer),callback:function ($$v) {_vm.$set(scope.row, \"answer\", $$v)},expression:\"scope.row.answer\"}})]}}],null,false,2873148768)}),_c('el-table-column',{attrs:{\"label\":\"答案解析\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-input',{staticStyle:{\"margin-left\":\"5px\"},attrs:{\"type\":\"textarea\",\"rows\":2},model:{value:(scope.row.analysis),callback:function ($$v) {_vm.$set(scope.row, \"analysis\", $$v)},expression:\"scope.row.analysis\"}})]}}],null,false,3618962382)}),_c('el-table-column',{attrs:{\"label\":\"操作\",\"width\":\"80\",\"align\":\"center\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"type\":\"danger\",\"icon\":\"el-icon-delete\",\"circle\":\"\"},on:{\"click\":function($event){return _vm.delUpdateAnswer(scope.row.id)}}})]}}],null,false,1195422580)})],1)],1):_vm._e()],1)],1),_c('div',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.updateQuTableVisible = false}}},[_vm._v(\"取 消\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.updateQuestion}},[_vm._v(\"确 定\")])],1)],1),_c('el-dialog',{attrs:{\"title\":\"新增题目\",\"visible\":_vm.addQuTableVisible,\"width\":\"50%\",\"center\":\"\"},on:{\"update:visible\":function($event){_vm.addQuTableVisible=$event},\"close\":_vm.resetAddQuForm}},[_c('el-card',[_c('el-form',{ref:\"addQuForm\",attrs:{\"model\":_vm.addQuForm,\"rules\":_vm.addQuFormRules}},[_c('el-form-item',{attrs:{\"label\":\"题目类型\",\"label-width\":\"120px\",\"prop\":\"questionType\"}},[_c('el-select',{attrs:{\"placeholder\":\"请选择\"},on:{\"change\":function($event){_vm.addQuForm.answer =  []}},model:{value:(_vm.addQuForm.questionType),callback:function ($$v) {_vm.$set(_vm.addQuForm, \"questionType\", $$v)},expression:\"addQuForm.questionType\"}},_vm._l((_vm.questionType),function(item){return _c('el-option',{key:item.id,attrs:{\"label\":item.name,\"value\":item.id}})}),1)],1),_c('el-form-item',{attrs:{\"label\":\"难度等级\",\"label-width\":\"120px\",\"prop\":\"questionLevel\"}},[_c('el-select',{attrs:{\"placeholder\":\"请选择\"},model:{value:(_vm.addQuForm.questionLevel),callback:function ($$v) {_vm.$set(_vm.addQuForm, \"questionLevel\", $$v)},expression:\"addQuForm.questionLevel\"}},[_c('el-option',{attrs:{\"value\":parseInt(1),\"label\":\"简单\"}}),_c('el-option',{attrs:{\"value\":parseInt(2),\"label\":\"中等\"}}),_c('el-option',{attrs:{\"value\":parseInt(3),\"label\":\"困难\"}})],1)],1),_c('el-form-item',{attrs:{\"label\":\"归属题库\",\"label-width\":\"120px\",\"prop\":\"bankId\"}},[_c('el-select',{attrs:{\"multiple\":\"\",\"placeholder\":\"请选择\"},model:{value:(_vm.addQuForm.bankId),callback:function ($$v) {_vm.$set(_vm.addQuForm, \"bankId\", $$v)},expression:\"addQuForm.bankId\"}},_vm._l((_vm.allBank),function(item){return _c('el-option',{key:item.bankId,attrs:{\"label\":item.bankName,\"value\":item.bankId}})}),1)],1),_c('el-form-item',{attrs:{\"label\":\"归属课程\",\"label-width\":\"120px\",\"prop\":\"professionId\"}},[_c('el-cascader',{staticStyle:{\"width\":\"450px\"},attrs:{\"options\":_vm.professionOptions,\"props\":_vm.professionCascadeProps},model:{value:(_vm.addQuForm.professionId),callback:function ($$v) {_vm.$set(_vm.addQuForm, \"professionId\", $$v)},expression:\"addQuForm.professionId\"}})],1),_c('el-form-item',{attrs:{\"label\":\"题目内容\",\"label-width\":\"120px\",\"prop\":\"questionContent\"}},[_c('el-input',{staticStyle:{\"margin-left\":\"5px\"},attrs:{\"type\":\"textarea\",\"rows\":2},model:{value:(_vm.addQuForm.questionContent),callback:function ($$v) {_vm.$set(_vm.addQuForm, \"questionContent\", $$v)},expression:\"addQuForm.questionContent\"}})],1),_c('el-form-item',{attrs:{\"label\":\"题目图片\",\"label-width\":\"120px\",\"prop\":\"image\"}},[_c('el-upload',{ref:\"addUpload\",attrs:{\"action\":_vm.uploadImageUrl + '/teacher/uploadQuestionImage',\"on-preview\":_vm.uploadPreview,\"on-remove\":_vm.handleRemove,\"headers\":_vm.headers,\"before-upload\":_vm.beforeAvatarUpload,\"list-type\":\"picture\",\"on-success\":_vm.uploadImgSuccess,\"name\":\"file\"}},[_c('el-button',{attrs:{\"size\":\"small\",\"type\":\"primary\"}},[_vm._v(\"点击上传\")]),_c('div',{staticClass:\"el-upload__tip\",attrs:{\"slot\":\"tip\"},slot:\"tip\"},[_vm._v(\"只能上传jpg/png文件，且不超过10M\")])],1)],1),_c('el-form-item',{attrs:{\"label\":\"整题解析\",\"label-width\":\"120px\",\"prop\":\"analysis\"}},[_c('el-input',{staticStyle:{\"margin-left\":\"5px\"},attrs:{\"type\":\"textarea\",\"rows\":2},model:{value:(_vm.addQuForm.analysis),callback:function ($$v) {_vm.$set(_vm.addQuForm, \"analysis\", $$v)},expression:\"addQuForm.analysis\"}})],1),(_vm.addQuForm.questionType!==5)?_c('el-button',{staticStyle:{\"margin-left\":\"40px\"},attrs:{\"type\":\"primary\",\"plain\":\"\",\"size\":\"small\",\"icon\":\"el-icon-plus\"},on:{\"click\":function($event){return _vm.addAnswer(_vm.addQuForm.questionType)}}},[_vm._v(\" 添加 \")]):_vm._e(),(_vm.addQuForm.questionType!==5)?_c('el-form-item',{attrs:{\"prop\":\"answer\"}},[_c('el-table',{staticStyle:{\"width\":\"96%\",\"margin-left\":\"40px\",\"margin-top\":\"10px\"},attrs:{\"data\":_vm.addQuForm.answer,\"border\":\"\"}},[(_vm.addQuForm.questionType!==4)?_c('el-table-column',{attrs:{\"label\":\"是否答案\",\"width\":\"80\",\"align\":\"center\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-checkbox',{on:{\"change\":checked=>_vm.checkAnswer(checked,scope.row.id)},model:{value:(scope.row.isTrue),callback:function ($$v) {_vm.$set(scope.row, \"isTrue\", $$v)},expression:\"scope.row.isTrue\"}},[_vm._v(\"答案 \")])]}}],null,false,3817251050)}):_vm._e(),_c('el-table-column',{attrs:{\"label\":\"答案内容\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-input',{staticStyle:{\"margin-left\":\"5px\"},attrs:{\"type\":\"textarea\",\"rows\":2},model:{value:(scope.row.answer),callback:function ($$v) {_vm.$set(scope.row, \"answer\", $$v)},expression:\"scope.row.answer\"}})]}}],null,false,2873148768)}),_c('el-table-column',{attrs:{\"label\":\"答案解析\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-input',{staticStyle:{\"margin-left\":\"5px\"},attrs:{\"type\":\"textarea\",\"rows\":2},model:{value:(scope.row.analysis),callback:function ($$v) {_vm.$set(scope.row, \"analysis\", $$v)},expression:\"scope.row.analysis\"}})]}}],null,false,3618962382)}),_c('el-table-column',{attrs:{\"label\":\"操作\",\"width\":\"80\",\"align\":\"center\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"type\":\"danger\",\"icon\":\"el-icon-delete\",\"circle\":\"\"},on:{\"click\":function($event){return _vm.delAnswer(scope.row.id)}}})]}}],null,false,2234352101)})],1)],1):_vm._e()],1)],1),_c('div',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.addQuTableVisible = false}}},[_vm._v(\"取 消\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.addQuestion}},[_vm._v(\"确 定\")])],1)],1),_c('el-dialog',{attrs:{\"title\":\"加入题库\",\"visible\":_vm.addTableVisible,\"width\":\"30%\",\"center\":\"\"},on:{\"update:visible\":function($event){_vm.addTableVisible=$event},\"close\":_vm.resetAddForm}},[_c('el-form',{ref:\"addForm\",attrs:{\"model\":_vm.addForm,\"rules\":_vm.addFormRules}},[_c('el-form-item',{attrs:{\"label\":\"题库名称\",\"label-width\":\"120px\",\"prop\":\"bankId\"}},[_c('el-select',{attrs:{\"multiple\":\"\",\"placeholder\":\"请选择题库\"},model:{value:(_vm.addForm.bankId),callback:function ($$v) {_vm.$set(_vm.addForm, \"bankId\", $$v)},expression:\"addForm.bankId\"}},_vm._l((_vm.allBank),function(item){return _c('el-option',{key:item.bankId,attrs:{\"label\":item.bankName,\"value\":item.bankId}})}),1)],1)],1),_c('div',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.addTableVisible = false}}},[_vm._v(\"取 消\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.addBank}},[_vm._v(\"确 定\")])],1)],1),_c('el-dialog',{attrs:{\"title\":\"从题库中移除\",\"visible\":_vm.removeTableVisible,\"width\":\"30%\",\"center\":\"\"},on:{\"update:visible\":function($event){_vm.removeTableVisible=$event},\"close\":_vm.resetRemoveForm}},[_c('el-form',{ref:\"removeForm\",attrs:{\"model\":_vm.removeForm,\"rules\":_vm.removeFormRules}},[_c('el-form-item',{attrs:{\"label\":\"题库名称\",\"label-width\":\"120px\",\"prop\":\"bankId\"}},[_c('el-select',{attrs:{\"multiple\":\"\",\"placeholder\":\"请选择题库\"},model:{value:(_vm.removeForm.bankId),callback:function ($$v) {_vm.$set(_vm.removeForm, \"bankId\", $$v)},expression:\"removeForm.bankId\"}},_vm._l((_vm.allBank),function(item){return _c('el-option',{key:item.bankId,attrs:{\"label\":item.bankName,\"value\":item.bankId}})}),1)],1)],1),_c('div',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.removeTableVisible = false}}},[_vm._v(\"取 消\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.removeBank}},[_vm._v(\"确 定\")])],1)],1),_c('el-dialog',{attrs:{\"visible\":_vm.backShowImgVisible},on:{\"update:visible\":function($event){_vm.backShowImgVisible=$event},\"close\":function($event){_vm.backShowImgVisible = false}}},[_c('img',{staticStyle:{\"width\":\"100%\"},attrs:{\"src\":_vm.imgUrl+_vm.backShowImgUrl,\"alt\":\"\"}})])],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <el-container>\n\n    <el-aside width=\"250px\">\n      <el-input\n        style=\"margin-left: 10px\"\n        placeholder=\"输入关键字进行过滤\"\n        v-model=\"filterText\">\n      </el-input>\n      <el-tree\n        style=\"margin-top: 15px\"\n        :data=\"professionData\"\n        show-checkbox\n        check-on-click-node\n        :expand-on-click-node=\"false\"\n        node-key=\"id\"\n        ref=\"tree\"\n        @check=\"TreeCurrentChange\"\n        highlight-current\n        :filter-node-method=\"filterNode\"\n        :props=\"defaultProps\">\n      </el-tree>\n    </el-aside>\n\n    <el-container>\n      <el-header height=\"220\">\n        <el-row>\n          <el-select @change=\"typeChange\" clearable v-model=\"queryInfo.questionType\" placeholder=\"请选择题目类型\">\n            <el-option\n              v-for=\"item in questionType\"\n              :key=\"item.id\"\n              :label=\"item.name\"\n              :value=\"item.id\">\n            </el-option>\n          </el-select>\n\n          <el-select @change=\"bankChange\" clearable v-model=\"queryInfo.questionBank\" placeholder=\"请选择题库\"\n                     style=\"margin-left: 5px\">\n            <el-option\n              v-for=\"item in allBank\"\n              :key=\"item.id\"\n              :label=\"item.bankName\"\n              :value=\"item.bankName\">\n            </el-option>\n          </el-select>\n\n          <el-input v-model=\"queryInfo.questionContent\" @blur=\"contentChange\" placeholder=\"题目内容\"\n                    style=\"margin-left: 5px;width: 220px\"\n                    prefix-icon=\"el-icon-search\"></el-input>\n\n\n          <el-button type=\"primary\" style=\"float: right;margin-right: 20px\" icon=\"el-icon-plus\" size=\"medium\"\n                     @click=\"addQuTableVisible = true\">添加\n          </el-button>\n        </el-row>\n\n      </el-header>\n\n      <el-main>\n        <!--操作的下拉框-->\n        <el-select @change=\"operationChange\" clearable v-if=\"selectionTable.length !== 0\" v-model=\"operation\"\n                   :placeholder=\"'已选择' + selectionTable.length + '项'\" style=\"margin-bottom: 25px;\">\n\n          <el-option v-for=\"(item,index) in optionInfo\" :key=\"index\" :value=\"item.desc\">\n            <span style=\"float: left\">{{ item.label }}</span>\n            <span style=\"float: right; color: #8492a6; font-size: 13px\">{{ item.desc }}</span>\n          </el-option>\n\n        </el-select>\n\n        <el-table\n          ref=\"questionTable\"\n          highlight-current-row\n          v-loading=\"loading\"\n          :border=\"true\"\n          :data=\"questionInfo\"\n          tooltip-effect=\"dark\"\n          style=\"width: 100%;\" @selection-change=\"handleTableSectionChange\">\n\n          <el-table-column align=\"center\"\n                           type=\"selection\"\n                           width=\"55\">\n          </el-table-column>\n\n          <el-table-column label=\"试题内容\">\n            <template slot-scope=\"scope\">\n              <div>\n                <div>\n                  [<span v-if=\"scope.row.quType === 1\">单选题</span>\n                  <span v-else-if=\"scope.row.quType === 2\">多选题</span>\n                  <span v-else-if=\"scope.row.quType === 3\">判断题</span>\n                  <span v-else-if=\"scope.row.quType === 4\">填空题</span>\n                  <span v-else-if=\"scope.row.quType === 5\">简答题</span>]\n                  [<span v-if=\"scope.row.level === 1\">简单</span>\n                  <span v-if=\"scope.row.level === 2\">中等</span>\n                  <span v-if=\"scope.row.level === 3\">困难</span>]\n                  <span class=\"quContent\" @click=\"updateQu(scope.row.id)\">{{ scope.row.quContent }}</span>\n                </div>\n                <div v-if=\"scope.row.image!=null && scope.row.image!==''\" style=\"margin-top: 5px\">\n                  <img style=\"max-width: 400px;max-height: 120px;margin-right: 20px \"\n                       v-for=\"url in scope.row.image.split(',')\" :src=\"imgUrl+url\"/>\n                </div>\n                <div class=\"qu-knowledgeName\">\n                  <div>所属题库：{{ scope.row.quBankName }}</div>\n                  <div style=\"padding-right: 70px\">{{ new Date(scope.row.createTime).toLocaleDateString() }}</div>\n                </div>\n              </div>\n            </template>\n          </el-table-column>\n\n\n        </el-table>\n\n        <!--分页-->\n        <el-pagination style=\"margin-top: 25px\"\n                       @size-change=\"handleSizeChange\"\n                       @current-change=\"handleCurrentChange\"\n                       :current-page=\"queryInfo.pageNo\"\n                       :page-sizes=\"[10, 20, 30, 50]\"\n                       :page-size=\"queryInfo.pageSize\"\n                       layout=\"total, sizes, prev, pager, next, jumper\"\n                       :total=\"total\">\n        </el-pagination>\n\n      </el-main>\n    </el-container>\n\n    <el-dialog title=\"更新题目\" :visible.sync=\"updateQuTableVisible\" width=\"50%\" center>\n      <el-card>\n\n        <el-form :model=\"updateQuForm\" ref=\"updateQuForm\" :rules=\"updateQuFormRules\">\n\n          <el-form-item label=\"题目类型\" label-width=\"120px\" prop=\"questionType\">\n            <el-select v-model=\"updateQuForm.questionType\" disabled @change=\"updateQuForm.answer =  []\"\n                       placeholder=\"请选择\">\n              <el-option\n                v-for=\"item in questionType\"\n                :key=\"item.id\"\n                :label=\"item.name\"\n                :value=\"item.id\">\n              </el-option>\n            </el-select>\n          </el-form-item>\n\n          <el-form-item label=\"难度等级\" label-width=\"120px\" prop=\"questionLevel\">\n            <el-select v-model=\"updateQuForm.questionLevel\" placeholder=\"请选择\">\n              <el-option :value=\"parseInt(1)\" label=\"简单\"></el-option>\n              <el-option :value=\"parseInt(2)\" label=\"中等\"></el-option>\n              <el-option :value=\"parseInt(3)\" label=\"困难\"></el-option>\n            </el-select>\n          </el-form-item>\n\n\n          <el-form-item label=\"归属题库\" label-width=\"120px\" prop=\"bankId\">\n            <el-select multiple v-model=\"updateQuForm.bankId\" placeholder=\"请选择\">\n              <el-option v-for=\"item in allBank\" :key=\"item.bankId\"\n                         :label=\"item.bankName\" :value=\"item.bankId\"></el-option>\n            </el-select>\n          </el-form-item>\n\n          <el-form-item label=\"归属课程\" label-width=\"120px\" prop=\"professionId\">\n            <el-cascader\n              style=\"width: 450px\"\n              v-model=\"updateQuForm.professionId\"\n              :options=\"professionOptions\"\n              :props=\"professionCascadeProps\"\n            ></el-cascader>\n          </el-form-item>\n\n          <el-form-item label=\"题目内容\" label-width=\"120px\" prop=\"questionContent\">\n            <el-input v-model=\"updateQuForm.questionContent\" style=\"margin-left: 5px\" type=\"textarea\"\n                      :rows=\"2\"></el-input>\n          </el-form-item>\n\n          <el-form-item label=\"题目图片\" label-width=\"120px\">\n            <el-upload\n              ref=\"updateUpload\"\n              :action=\"uploadImageUrl + '/teacher/uploadQuestionImage'\"\n              :on-preview=\"uploadPreview\"\n              :on-remove=\"handleUpdateRemove\"\n              :headers=\"headers\"\n              :before-upload=\"beforeAvatarUpload\"\n              list-type=\"picture\"\n              :on-success=\"updateUploadImgSuccess\"\n              name=\"file\">\n              <el-button size=\"small\" type=\"primary\">点击上传</el-button>\n              <div slot=\"tip\" class=\"el-upload__tip\">只能上传jpg/png文件，且不超过10M</div>\n            </el-upload>\n          </el-form-item>\n\n          <el-form-item label=\"整题解析\" label-width=\"120px\" prop=\"analysis\">\n            <el-input v-model=\"updateQuForm.analysis\" style=\"margin-left: 5px\" type=\"textarea\"\n                      :rows=\"2\"></el-input>\n          </el-form-item>\n\n          <el-button v-if=\"updateQuForm.questionType!==5\" type=\"primary\" plain size=\"small\" icon=\"el-icon-plus\"\n                     style=\"margin-left: 40px\" @click=\"addUpdateAnswer(updateQuForm.questionType)\">\n            添加\n          </el-button>\n\n          <!--存放答案表单的信息-->\n          <el-form-item prop=\"answer\" v-if=\"updateQuForm.questionType !== 5\">\n            <el-table :data=\"updateQuForm.answer\" border style=\"width: 96%;margin-left: 40px;margin-top: 10px\">\n\n              <el-table-column label=\"是否答案\" width=\"80\" align=\"center\" v-if=\"updateQuForm.questionType !== 4\">\n                <template slot-scope=\"scope\">\n                  <el-checkbox v-model=\"scope.row.isTrue\" @change=\"checked=>checkUpdateAnswer(checked,scope.row.id)\">答案\n                  </el-checkbox>\n                </template>\n              </el-table-column>\n\n              <el-table-column label=\"答案内容\">\n                <template slot-scope=\"scope\">\n                  <el-input v-model=\"scope.row.answer\" style=\"margin-left: 5px\" type=\"textarea\"\n                            :rows=\"2\"></el-input>\n                </template>\n              </el-table-column>\n\n              <el-table-column label=\"答案解析\">\n                <template slot-scope=\"scope\">\n                  <el-input v-model=\"scope.row.analysis\" style=\"margin-left: 5px\" type=\"textarea\"\n                            :rows=\"2\"></el-input>\n                </template>\n              </el-table-column>\n\n              <el-table-column label=\"操作\" width=\"80\" align=\"center\">\n                <template slot-scope=\"scope\">\n                  <el-button type=\"danger\" icon=\"el-icon-delete\" circle\n                             @click=\"delUpdateAnswer(scope.row.id)\"></el-button>\n                </template>\n              </el-table-column>\n\n            </el-table>\n          </el-form-item>\n\n        </el-form>\n\n      </el-card>\n\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"updateQuTableVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"updateQuestion\">确 定</el-button>\n      </div>\n    </el-dialog>\n\n    <el-dialog title=\"新增题目\" :visible.sync=\"addQuTableVisible\" width=\"50%\" @close=\"resetAddQuForm\" center>\n\n      <el-card>\n\n        <el-form :model=\"addQuForm\" ref=\"addQuForm\" :rules=\"addQuFormRules\">\n\n          <el-form-item label=\"题目类型\" label-width=\"120px\" prop=\"questionType\">\n            <el-select v-model=\"addQuForm.questionType\" @change=\"addQuForm.answer =  []\" placeholder=\"请选择\">\n              <el-option\n                v-for=\"item in questionType\"\n                :key=\"item.id\"\n                :label=\"item.name\"\n                :value=\"item.id\">\n              </el-option>\n            </el-select>\n          </el-form-item>\n\n          <el-form-item label=\"难度等级\" label-width=\"120px\" prop=\"questionLevel\">\n            <el-select v-model=\"addQuForm.questionLevel\" placeholder=\"请选择\">\n              <el-option :value=\"parseInt(1)\" label=\"简单\"></el-option>\n              <el-option :value=\"parseInt(2)\" label=\"中等\"></el-option>\n              <el-option :value=\"parseInt(3)\" label=\"困难\"></el-option>\n            </el-select>\n          </el-form-item>\n\n\n          <el-form-item label=\"归属题库\" label-width=\"120px\" prop=\"bankId\">\n            <el-select multiple v-model=\"addQuForm.bankId\" placeholder=\"请选择\">\n              <el-option v-for=\"item in allBank\" :key=\"item.bankId\"\n                         :label=\"item.bankName\" :value=\"item.bankId\"></el-option>\n            </el-select>\n          </el-form-item>\n\n          <el-form-item label=\"归属课程\" label-width=\"120px\" prop=\"professionId\">\n            <el-cascader\n              style=\"width: 450px\"\n              v-model=\"addQuForm.professionId\"\n              :options=\"professionOptions\"\n              :props=\"professionCascadeProps\"\n            ></el-cascader>\n          </el-form-item>\n\n          <el-form-item label=\"题目内容\" label-width=\"120px\" prop=\"questionContent\">\n            <el-input v-model=\"addQuForm.questionContent\" style=\"margin-left: 5px\" type=\"textarea\"\n                      :rows=\"2\"></el-input>\n          </el-form-item>\n\n          <el-form-item label=\"题目图片\" label-width=\"120px\" prop=\"image\">\n            <el-upload\n              ref=\"addUpload\"\n              :action=\"uploadImageUrl + '/teacher/uploadQuestionImage'\"\n              :on-preview=\"uploadPreview\"\n              :on-remove=\"handleRemove\"\n              :headers=\"headers\"\n              :before-upload=\"beforeAvatarUpload\"\n              list-type=\"picture\"\n              :on-success=\"uploadImgSuccess\"\n              name=\"file\">\n              <el-button size=\"small\" type=\"primary\">点击上传</el-button>\n              <div slot=\"tip\" class=\"el-upload__tip\">只能上传jpg/png文件，且不超过10M</div>\n            </el-upload>\n          </el-form-item>\n\n          <el-form-item label=\"整题解析\" label-width=\"120px\" prop=\"analysis\">\n            <el-input v-model=\"addQuForm.analysis\" style=\"margin-left: 5px\" type=\"textarea\"\n                      :rows=\"2\"></el-input>\n          </el-form-item>\n\n          <el-button v-if=\"addQuForm.questionType!==5\" type=\"primary\" plain size=\"small\" icon=\"el-icon-plus\"\n                     style=\"margin-left: 40px\" @click=\"addAnswer(addQuForm.questionType)\">\n            添加\n          </el-button>\n\n          <!--存放答案表单的信息-->\n          <el-form-item prop=\"answer\" v-if=\"addQuForm.questionType!==5\">\n            <el-table :data=\"addQuForm.answer\" border style=\"width: 96%;margin-left: 40px;margin-top: 10px\">\n\n              <el-table-column label=\"是否答案\" width=\"80\" align=\"center\" v-if=\"addQuForm.questionType!==4\">\n                <template slot-scope=\"scope\">\n                  <el-checkbox v-model=\"scope.row.isTrue\" @change=\"checked=>checkAnswer(checked,scope.row.id)\">答案\n                  </el-checkbox>\n                </template>\n              </el-table-column>\n\n              <el-table-column label=\"答案内容\">\n                <template slot-scope=\"scope\">\n                  <el-input v-model=\"scope.row.answer\" style=\"margin-left: 5px\" type=\"textarea\"\n                            :rows=\"2\"></el-input>\n                </template>\n              </el-table-column>\n\n              <el-table-column label=\"答案解析\">\n                <template slot-scope=\"scope\">\n                  <el-input v-model=\"scope.row.analysis\" style=\"margin-left: 5px\" type=\"textarea\"\n                            :rows=\"2\"></el-input>\n                </template>\n              </el-table-column>\n\n              <el-table-column label=\"操作\" width=\"80\" align=\"center\">\n                <template slot-scope=\"scope\">\n                  <el-button type=\"danger\" icon=\"el-icon-delete\" circle @click=\"delAnswer(scope.row.id)\"></el-button>\n                </template>\n              </el-table-column>\n\n            </el-table>\n          </el-form-item>\n\n        </el-form>\n\n      </el-card>\n\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"addQuTableVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"addQuestion\">确 定</el-button>\n      </div>\n    </el-dialog>\n\n    <el-dialog title=\"加入题库\" :visible.sync=\"addTableVisible\" width=\"30%\" @close=\"resetAddForm\"\n               center>\n\n      <el-form :model=\"addForm\" :rules=\"addFormRules\" ref=\"addForm\">\n\n        <el-form-item label=\"题库名称\" label-width=\"120px\" prop=\"bankId\">\n\n          <el-select multiple v-model=\"addForm.bankId\" placeholder=\"请选择题库\">\n            <el-option v-for=\"item in allBank\" :key=\"item.bankId\"\n                       :label=\"item.bankName\" :value=\"item.bankId\"></el-option>\n          </el-select>\n\n        </el-form-item>\n      </el-form>\n\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"addTableVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"addBank\">确 定</el-button>\n      </div>\n    </el-dialog>\n\n    <el-dialog title=\"从题库中移除\" :visible.sync=\"removeTableVisible\" width=\"30%\" @close=\"resetRemoveForm\"\n               center>\n\n      <el-form :model=\"removeForm\" :rules=\"removeFormRules\" ref=\"removeForm\">\n\n        <el-form-item label=\"题库名称\" label-width=\"120px\" prop=\"bankId\">\n\n          <el-select multiple v-model=\"removeForm.bankId\" placeholder=\"请选择题库\">\n\n            <el-option v-for=\"item in allBank\" :key=\"item.bankId\"\n                       :label=\"item.bankName\" :value=\"item.bankId\"></el-option>\n          </el-select>\n\n        </el-form-item>\n      </el-form>\n\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"removeTableVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"removeBank\">确 定</el-button>\n      </div>\n    </el-dialog>\n\n    <!--图片回显-->\n    <el-dialog :visible.sync=\"backShowImgVisible\" @close=\"backShowImgVisible = false\">\n      <img style=\"width: 100%\" :src=\"imgUrl+backShowImgUrl\" alt=\"\">\n    </el-dialog>\n\n  </el-container>\n\n</template>\n\n<script>\nimport questionBank from '@/api/questionBank'\nimport question from '@/api/question'\nimport utils from '@/utils/utils'\nimport profession from \"@/api/profession\";\nimport auth from \"../../api/auth\";\nimport user from \"../../api/user\";\n\nexport default {\n  name: 'QuestionManage',\n  data() {\n    return {\n      professionOptions: [],\n      professionCascadeProps: {\n        expandTrigger: 'hover',\n        value: 'id',\n        label: 'name',\n        emitPath: false\n      },\n      uploadImageUrl: process.env.VUE_APP_UPLOAD_IMAGE_URL,\n      imgUrl: process.env.VUE_APP_IMAGE_URL,\n      filterText: '',\n      professionData: [],\n      defaultProps: {\n        children: 'children',\n        label: 'name'\n      },\n      chaCascadeProps: {\n        expandTrigger: 'hover',\n        checkStrictly: true,\n        value: 'id',\n        label: 'name',\n        emitPath: false\n      },\n      queryInfo: {\n        //题目类型下拉款所选的内容\n        'questionType': '',\n        'questionBank': '',\n        'professionIds': '',\n        'questionContent': '',\n        'pageNo': 1,\n        'pageSize': 10\n      },\n      //答案的选项名abcd数据\n      optionName: ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'],\n      //题目类型\n      questionType: [\n        {\n          id: 1,\n          name: '单选题',\n        },\n        {\n          id: 2,\n          name: '多选题',\n        },\n        {\n          id: 3,\n          name: '判断题',\n        },\n        {\n          id: 4,\n          name: '填空题',\n        },\n        {\n          id: 5,\n          name: '简答题',\n        }\n      ],\n      //题库信息\n      allBank: [],\n      //题目信息\n      questionInfo: [],\n      //题目信息表格是否加载\n      loading: true,\n      //表格被选中的所有行\n      selectionTable: [],\n      //表格行被选中后的所有操作方式的数据\n      optionInfo: [\n        {\n          'label': '删除',\n          'desc': 'delete'\n        },\n        {\n          'label': '加入题库',\n          'desc': 'add'\n        },\n        {\n          'label': '题库中移除',\n          'desc': 'remove'\n        }\n      ],\n      //表格行被选中后的数据\n      operation: '',\n      //题目总数\n      total: 0,\n      //是否显示加入题库对话框\n      addTableVisible: false,\n      //是否显示移除题库对话框\n      removeTableVisible: false,\n      //是否显示添加题目的对话框\n      addQuTableVisible: false,\n      //添加题库的表单信息\n      addForm: {\n        bankId: ''\n      },\n      removeForm: {\n        bankId: ''\n      },\n      //添加题库表单的验证\n      addFormRules: {\n        bankId: [\n          {\n            required: true,\n            message: '请选择需要添加进的题库',\n            trigger: 'blur'\n          }\n        ]\n      },\n      //移除题库表单的验证\n      removeFormRules: {\n        bankId: [\n          {\n            required: true,\n            message: '请选择需要移除的题库',\n            trigger: 'blur'\n          }\n        ]\n      },\n      //添加题目的表单信息\n      addQuForm: {\n        questionType: 1,\n        questionLevel: 1,\n        professionId: null,\n        bankId: '',\n        questionContent: '',\n        images: [],\n        analysis: '',\n        createPerson: localStorage.getItem('username'),\n        //答案对象\n        answer: []\n      },\n      //添加题目表单的验证规则\n      addQuFormRules: {\n        questionType: [\n          {\n            required: true,\n            message: '请选择问题类型',\n            trigger: 'blur'\n          }\n        ],\n        questionLevel: [\n          {\n            required: true,\n            message: '请选择问题难度',\n            trigger: 'blur'\n          }\n        ],\n        bankId: [\n          {\n            required: true,\n            message: '请选择题库',\n            trigger: 'blur'\n          }\n        ],\n        questionContent: [\n          {\n            required: true,\n            message: '请输入题库内容',\n            trigger: 'blur'\n          }\n        ],\n        professionId: [\n          {\n            required: true,\n            message: '请选择所属课程',\n            trigger: 'blur'\n          }\n        ],\n      },\n      //更新题目表单的验证规则\n      updateQuFormRules: {\n        questionType: [\n          {\n            required: true,\n            message: '请选择问题类型',\n            trigger: 'blur'\n          }\n        ],\n        questionLevel: [\n          {\n            required: true,\n            message: '请选择问题难度',\n            trigger: 'blur'\n          }\n        ],\n        bankId: [\n          {\n            required: true,\n            message: '请选择题库',\n            trigger: 'blur'\n          }\n        ],\n        questionContent: [\n          {\n            required: true,\n            message: '请输入题库内容',\n            trigger: 'blur'\n          }\n        ],\n        professionId: [\n          {\n            required: true,\n            message: '请选择所属课程',\n            trigger: 'blur'\n          }\n        ],\n      },\n      //图片回显的样式\n      backShowImgVisible: false,\n      //图片回显的图片地址\n      backShowImgUrl: '',\n      //更新题目的数据信息\n      updateQuForm: {\n        questionId: '',\n        professionId: null,\n        questionType: 1,\n        questionLevel: 1,\n        bankId: '',\n        questionContent: '',\n        images: [],\n        analysis: '',\n        createPerson: localStorage.getItem('username'),\n        //答案对象\n        answer: []\n      },\n      //是否显示更新题目的对话框\n      updateQuTableVisible: false,\n      sendEmBt: false,\n      showEmailVerify: false,\n      btnText: '发送验证码',\n      registerInfo: {\n        email: '',\n        code: '',\n      },\n      rules: {\n        email: [\n          {required: true, message: '请输入邮箱号', trigger: 'blur'},\n        ],\n        code: [\n          {required: true, message: '请输入验证码', trigger: 'blur'},\n        ]\n      }\n    }\n  },\n  created() {\n    this.professionInfo()\n    this.getQuestionBankInfo()\n    this.getQuestionInfo()\n  },\n  methods: {\n    //获取所有的专业课程信息\n    professionInfo() {\n      profession.getList().then(resp => {\n        this.professionData = resp.data\n        this.professionOptions = resp.data\n      })\n    },\n    //获取所有的题库信息\n    getQuestionBankInfo() {\n      questionBank.getQuestionBank().then((resp) => {\n        if (resp.code === 200) {\n          this.allBank = resp.data\n        }\n      })\n    },\n    //题目类型变化\n    typeChange(val) {\n      this.queryInfo.questionType = val\n      this.getQuestionInfo()\n    },\n    //题库变化\n    bankChange(val) {\n      this.queryInfo.questionBank = val\n      this.getQuestionInfo()\n    },\n    //题目名字筛选\n    contentChange() {\n      //发送查询题目总数的请求\n      this.getQuestionInfo()\n    },\n    //获取题目信息\n    getQuestionInfo() {\n      question.getQuestion(this.queryInfo).then((resp) => {\n        if (resp.code === 200) {\n          this.questionInfo = resp.data.data\n          this.total = resp.data.total\n          this.loading = false\n        }\n      })\n    },\n    //处理表格被选中\n    handleTableSectionChange(val) {\n      this.selectionTable = val\n    },\n    //处理操作选择框的变化\n    operationChange(val) {\n      //清空上一次的选择\n      this.operation = ''\n      if (val === 'delete') {\n        this.deleteQuestions()\n      } else if (val === 'add') {\n        this.addTableVisible = true\n      } else if (val === 'remove') {\n        this.removeTableVisible = true\n      }\n    },\n    deleteQuestions() {\n      let questionIds = []\n      this.selectionTable.map(item => {\n        questionIds.push(item.id)\n      })\n      //发起删除请求\n      question.deleteQuestion({'questionIds': questionIds.join(',')}).then(resp => {\n        if (resp.code === 200) {\n          this.$notify({\n            title: 'Tips',\n            message: '删除成功',\n            type: 'success',\n            duration: 2000\n          })\n          this.getQuestionInfo()\n        }\n      })\n    },\n    //分页页面大小改变\n    handleSizeChange(val) {\n      this.queryInfo.pageSize = val\n      this.getQuestionInfo()\n    },\n    //分页插件的页数\n    handleCurrentChange(val) {\n      this.queryInfo.pageNo = val\n      this.getQuestionInfo()\n    },\n    //表单信息重置\n    resetAddForm() {\n      //清空表格数据\n      this.$refs['addForm'].resetFields()\n    },\n    resetRemoveForm() {\n      //清空表格数据\n      this.$refs['removeForm'].resetFields()\n    },\n    resetAddQuForm() {\n      this.$refs['addQuForm'].resetFields()\n    },\n    //提交加入题库的表单信息\n    addBank() {\n      utils.validFormAndInvoke(this.$refs['addForm'], () => {\n        let questionIds = []\n        let banks = this.addForm.bankId\n        //将表格选中的数据中的问题id加入进去\n        this.selectionTable.map(item => {\n          questionIds.push(item.id)\n        })\n        questionBank.addBankQuestion({\n          'questionIds': questionIds.join(','),\n          'banks': banks.join(',')\n        }).then((resp) => {\n          if (resp.code === 200) {\n            this.getQuestionInfo()\n            this.$notify({\n              title: 'Tips',\n              message: resp.message,\n              type: 'success',\n              duration: 2000\n            })\n          }\n          this.addTableVisible = false\n        })\n      }, '请选择需要加入进的题库')\n    },\n    //提交移除题库的表单信息\n    removeBank() {\n      utils.validFormAndInvoke(this.$refs['removeForm'], () => {\n        let questionIds = []\n        let banks = this.removeForm.bankId\n        //将表格选中的数据中的问题id加入进去\n        this.selectionTable.map(item => {\n          questionIds.push(item.id)\n        })\n        //发起移除请求\n        questionBank.removeBankQuestion({\n          'questionIds': questionIds.join(','),\n          'banks': banks.join(',')\n        }).then((resp) => {\n          if (resp.code === 200) {\n            this.getQuestionInfo()\n            this.$notify({\n              title: 'Tips',\n              message: resp.message,\n              type: 'success',\n              duration: 2000\n            })\n          }\n          this.removeTableVisible = false\n        })\n      }, '请选择需要移除的题库')\n    },\n    //新增题目上传后 点击图片的回显\n    uploadPreview(file) {\n      this.backShowImgUrl = file.response.data\n      this.backShowImgVisible = true\n    },\n    //新增题目中的上传图片的移除\n    handleRemove(file, fileList) {\n      this.addQuForm.images.map((item, index) => {//移除图片在表单中的数据\n        if (item === file.response.data) this.addQuForm.images.splice(index, 1)\n      })\n    },\n    //更新题目中的上传图片的移除\n    handleUpdateRemove(file, fileList) {\n      this.updateQuForm.images.map((item, index) => {//移除图片在表单中的数据\n        if (item === file.response.data) this.updateQuForm.images.splice(index, 1)\n      })\n    },\n    //新增题目中的上传图片的格式大小限制\n    beforeAvatarUpload(file) {\n      const isImg = file.type === 'image/jpeg' ||\n        file.type === 'image/png' ||\n        file.type === 'image/jpg'\n      const isLt = file.size / 1024 / 1024 < 10\n\n      if (!isImg) {\n        this.$message.error('上传图片只能是 JPG/PNG 格式!')\n      }\n\n      if (!isLt) {\n        this.$message.error('上传头像图片大小不能超过 10MB!')\n      }\n      return isImg && isLt\n    },\n    //新增题目中的上传图片成功后的钩子函数\n    uploadImgSuccess(response, file, fileList) {\n      this.addQuForm.images.push(response.data)\n    },\n    //更新题目中的上传图片成功后的钩子函数\n    updateUploadImgSuccess(response, file, fileList) {\n      this.updateQuForm.images.push(response.data)\n    },\n    //新增题目中的新增答案填写框\n    addAnswer(type) {\n      this.addQuForm.answer.push({\n        id: this.addQuForm.answer.length,\n        isTrue: type === 4,\n        answer: '',\n        analysis: ''\n      })\n    },\n    //更新时新增题目中的新增答案填写框\n    addUpdateAnswer(type) {\n      this.updateQuForm.answer.push({\n        id: this.updateQuForm.answer.length,\n        isTrue: type === 4,\n        answer: '',\n        analysis: ''\n      })\n    },\n    //新增题目中的删除答案填写框\n    delAnswer(id) {//当前答案的id\n      this.addQuForm.answer.map((item, index) => {\n        if (item.id === id) this.addQuForm.answer.splice(index, 1)\n      })\n    },\n    //新增题目中的删除答案填写框\n    delUpdateAnswer(id) {//当前答案的id\n      this.updateQuForm.answer.map((item, index) => {\n        if (item.id === id) this.updateQuForm.answer.splice(index, 1)\n      })\n    },\n    //选择正确答案的按钮变化事件\n    checkAnswer(checked, id) {\n      if (checked) {\n        if (this.addQuForm.questionType === 1 || this.addQuForm.questionType === 3) {//单选或者判断\n          //当前已经有一个正确的选择了\n          this.addQuForm.answer.map(item => {\n            item.isTrue = false\n          })\n          this.addQuForm.answer.map(item => {\n            if (item.id === id) item.isTrue = true\n          })\n        } else {//多选 可以有多个答案\n          this.addQuForm.answer.map(item => {\n            if (item.id === id) item.isTrue = true\n          })\n        }\n      } else {\n        this.addQuForm.answer.map(item => {\n          if (item.id === id) item.isTrue = false\n        })\n      }\n    },\n    //更新时选择正确答案的按钮变化事件\n    checkUpdateAnswer(checked, id) {\n      if (checked) {\n        if (this.updateQuForm.questionType === 1 || this.updateQuForm.questionType === 3) {//单选或者判断\n          //当前已经有一个正确的选择了\n          this.updateQuForm.answer.map(item => {\n            item.isTrue = false\n          })\n          this.updateQuForm.answer.map(item => {\n            if (item.id === id) item.isTrue = true\n          })\n        } else {//多选 可以有多个答案\n          this.updateQuForm.answer.map(item => {\n            if (item.id === id) item.isTrue = true\n          })\n        }\n      } else {\n        this.updateQuForm.answer.map(item => {\n          if (item.id === id) item.isTrue = false\n        })\n      }\n    },\n    //新增题目\n    addQuestion() {\n      this.$refs['addQuForm'].validate((valid) => {\n        if (valid && this.addQuForm.answer.some(item => item.isTrue) && this.addQuForm.questionType !== 5) {//单选或者多选或者判断\n          question.addQuestion(this.addQuForm).then((resp) => {\n            if (resp.code === 200) {\n              this.addQuTableVisible = false\n              this.getQuestionInfo()\n              this.$notify({\n                title: 'Tips',\n                message: '新增题目成功',\n                type: 'success',\n                duration: 2000\n              })\n              this.$refs.addUpload.clearFiles()\n            }\n          })\n        } else if (valid && !this.addQuForm.answer.some(item => item.isTrue) && this.addQuForm.questionType !== 5) {//无答案\n          this.$message.error('必须有一个答案')\n          return false\n        } else if (valid && this.addQuForm.questionType === 5) {//简答题 无标准答案直接发请求\n          //当是简答题的时候需要清除answer\n          this.addQuForm.answer = []\n          question.addQuestion(this.addQuForm).then((resp) => {\n            if (resp.code === 200) {\n              this.addQuTableVisible = false\n              this.getQuestionInfo()\n              this.$notify({\n                title: 'Tips',\n                message: '新增题目成功',\n                type: 'success',\n                duration: 2000\n              })\n              this.$refs.addUpload.clearFiles()\n            }\n          })\n        } else if (!valid) {\n          this.$message.error('请填写必要信息')\n          return false\n        }\n      })\n    },\n    //更新题目\n    updateQu(id) {\n      question.getQuestionById(id).then((resp) => {\n        if (resp.code === 200) {\n          if (resp.data.questionType !== 5) {\n            resp.data.answer.map(item => {\n              item.isTrue = item.isTrue === 'true'\n            })\n          }\n          this.updateQuForm = resp.data\n          this.updateQuForm.professionId = String(resp.data.professionId)\n          console.log(this.updateQuForm)\n          //处理图片那个参数是个数组\n          if (this.updateQuForm.images === null) this.updateQuForm.images = []\n        }\n        this.updateQuTableVisible = true\n      })\n    },\n    //提交更新表单\n    updateQuestion() {\n      this.$refs['updateQuForm'].validate((valid) => {\n        if (valid && this.updateQuForm.questionType !== 5 && this.updateQuForm.answer.some(item => item.isTrue)) {//单选或者多选或者判断\n\n          question.updateQuestion(this.updateQuForm).then((resp) => {\n            if (resp.code === 200) {\n              this.updateQuTableVisible = false\n              this.getQuestionInfo()\n              this.$notify({\n                title: 'Tips',\n                message: '更新题目成功',\n                type: 'success',\n                duration: 2000\n              })\n              this.$refs.updateUpload.clearFiles()\n            }\n          })\n        } else if (valid && this.updateQuForm.questionType !== 5 && !this.updateQuForm.answer.some(item => item.isTrue)) {//无答案\n          this.$message.error('必须有一个答案')\n          return false\n        } else if (valid && this.updateQuForm.questionType === 5) {//简答题 无标准答案直接发请求\n          //当是简答题的时候需要清除answer\n          this.addQuForm.answer = []\n          question.updateQuestion(this.updateQuForm).then((resp) => {\n            if (resp.code === 200) {\n              this.updateQuTableVisible = false\n              this.getQuestionInfo()\n              this.$notify({\n                title: 'Tips',\n                message: '更新题目成功',\n                type: 'success',\n                duration: 2000\n              })\n              this.$refs.updateUpload.clearFiles()\n            }\n          })\n        } else if (!valid) {\n          this.$message.error('请填写必要信息')\n          return false\n        }\n      })\n    },\n    //检测树型选项变化\n    TreeCurrentChange() {\n      this.queryInfo.professionIds = this.$refs.tree.getCheckedKeys().join(',')\n      this.getQuestionInfo()\n    },\n    //过滤课程数据\n    filterNode(value, data) {\n      if (!value) return true;\n      return data.name.indexOf(value) !== -1;\n    },\n  },\n  computed: {\n    //监测头部信息的token变化\n    headers() {\n      return {\n        authorization: localStorage.getItem('authorization') || '',\n      }\n    },\n  },\n  watch: {\n    filterText(val) {\n      this.$refs.tree.filter(val);\n    }\n  },\n}\n</script>\n\n<style scoped lang=\"scss\">\n@import \"../../assets/css/teacher/questionManage\";\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./QuestionManage.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./QuestionManage.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./QuestionManage.vue?vue&type=template&id=b9f53dbc&scoped=true\"\nimport script from \"./QuestionManage.vue?vue&type=script&lang=js\"\nexport * from \"./QuestionManage.vue?vue&type=script&lang=js\"\nimport style0 from \"./QuestionManage.vue?vue&type=style&index=0&id=b9f53dbc&prod&scoped=true&lang=scss\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"b9f53dbc\",\n  null\n  \n)\n\nexport default component.exports","import request from \"../utils/request\";\n\nexport default {\n\n  getList(param) {\n    return request({\n      url: '/teacher/profession/get',\n      method: 'get',\n      params:param\n    })\n  },\n  deleteById(param) {\n    return request({\n      url: '/teacher/profession/delete',\n      method: 'get',\n      params: param\n    })\n  },\n  add(form) {\n    return request({\n      url: '/teacher/profession/add',\n      method: 'post',\n      data: form\n    })\n  },\n  update(form) {\n    return request({\n      url: '/teacher/profession/update',\n      method: 'post',\n      data: form\n    })\n  },\n}\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./QuestionManage.vue?vue&type=style&index=0&id=b9f53dbc&prod&scoped=true&lang=scss\"","import request from '@/utils/request'\n\nexport default {\n  getBankHaveQuestionSumByType (queryInfo) {\n    return request({\n      url: '/public/getBankHaveQuestionSumByType',\n      method: 'get',\n      params: queryInfo\n    })\n  },\n  deleteQuestionBank (ids) {\n    return request({\n      url: '/teacher/deleteQuestionBank',\n      method: 'get',\n      params: ids\n    })\n  },\n  addQuestionBank (questionBank) {\n    return request({\n      url: '/teacher/addQuestionBank',\n      method: 'post',\n      data: questionBank\n    })\n  },\n  getQuestionBank () {\n    return request({\n      url: '/teacher/getQuestionBank',\n      method: 'get'\n    })\n  },\n  addBankQuestion (params) {\n    return request({\n      url: '/teacher/addBankQuestion',\n      method: 'get',\n      params: params\n    })\n  },\n  removeBankQuestion (params) {\n    return request({\n      url: '/teacher/removeBankQuestion',\n      method: 'get',\n      params: params\n    })\n  },\n  getQuestionByBank (params) {\n    return request({\n      url: '/public/getQuestionByBank',\n      method: 'get',\n      params: params\n    })\n  }\n\n}\n","import request from '@/utils/request'\n\nexport default {\n  getCurrentUser () {\n    return request({\n      url: '/public/getCurrentUser',\n      method: 'get'\n    })\n  },\n  updateCurrentUser (updateUser) {\n    return request({\n      url: '/public/updateCurrentUser',\n      method: 'post',\n      data: updateUser\n    })\n  },\n  getUserByIds (userIds) {\n    return request({\n      url: `/teacher/getUserByIds`,\n      params: userIds,\n      method: 'get'\n    })\n  },\n  getUserInfo (params) {\n    return request({\n      url: '/admin/getUser',\n      method: 'get',\n      params: params\n    })\n  },\n  handlerUser (operateId, params) {\n    return request({\n      url: `/admin/handleUser/${operateId}`,\n      method: 'get',\n      params: params\n    })\n  },\n  addUser (data) {\n    return request({\n      url: '/admin/addUser',\n      method: 'post',\n      data: data\n    })\n  }\n}\n","import Vue from 'vue'\n\nconst getRandomId = () => {\n  return Math.floor(Math.random() * 10000000);\n}\n\nconst validFormAndInvoke = (formEl, success, message = '信息有误', fail = function () {\n}) => {\n  if (!formEl) {\n    return\n  }\n  formEl.validate(valid => {\n    if (valid) {\n      success()\n      formEl.resetFields()\n    } else {\n      Vue.prototype.$notify({\n        title: 'Tips',\n        message: message,\n        type: 'error',\n        duration: 2000\n      })\n      fail()\n      return false\n    }\n  })\n}\n\n\nconst validFormNotEmpty = (formEl, success, message, fail = function () {\n}) => {\n  if (!formEl) {\n    return\n  }\n  formEl.validate(valid => {\n    if (valid) {\n      success()\n    } else {\n      Vue.prototype.$notify({\n        title: 'Tips',\n        message: message,\n        type: 'error',\n        duration: 2000\n      })\n      fail()\n      return false\n    }\n  })\n}\n\nexport default {\n  validFormAndInvoke,\n  validFormNotEmpty,\n  getRandomId\n}\n"],"sourceRoot":""}